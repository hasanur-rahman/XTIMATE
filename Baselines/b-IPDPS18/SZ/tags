!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	sz/include/sz.h	44;"	d
ABS_AND_REL	sz/include/sz.h	46;"	d
ABS_OR_REL	sz/include/sz.h	47;"	d
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing aclocal-1.13$/;"	m
ACLOCAL	example/Makefile	/^ACLOCAL = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing aclocal-1.13$/;"	m
ACLOCAL	sz/Makefile	/^ACLOCAL = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing aclocal-1.13$/;"	m
ACLOCAL	zlib/Makefile	/^ACLOCAL = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing aclocal-1.13$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	example/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	sz/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	zlib/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	example/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	sz/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	zlib/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	example/Makefile	/^AM_CFLAGS = -lm -I..\/sz\/include -I..\/zlib$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	example/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	sz/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	zlib/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_FCFLAGS	example/Makefile	/^AM_FCFLAGS = -I..\/sz\/include -I..\/sz -I..\/zlib$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_CC	example/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	sz/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	zlib/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	example/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	sz/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	zlib/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_FC	example/Makefile	/^AM_V_FC = $(am__v_FC_$(V))$/;"	m
AM_V_FCLD	example/Makefile	/^AM_V_FCLD = $(am__v_FCLD_$(V))$/;"	m
AM_V_FCLD	sz/Makefile	/^AM_V_FCLD = $(am__v_FCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	example/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	sz/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	zlib/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	example/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	sz/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	zlib/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_PPFC	sz/Makefile	/^AM_V_PPFC = $(am__v_PPFC_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	example/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	sz/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	zlib/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	example/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	sz/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	zlib/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	Makefile	/^AR = ar$/;"	m
AR	example/Makefile	/^AR = ar$/;"	m
AR	sz/Makefile	/^AR = ar$/;"	m
AR	zlib/Makefile	/^AR = ar$/;"	m
ASCIILINESZ	sz/src/iniparser.c	14;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoconf$/;"	m
AUTOCONF	example/Makefile	/^AUTOCONF = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoconf$/;"	m
AUTOCONF	sz/Makefile	/^AUTOCONF = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoconf$/;"	m
AUTOCONF	zlib/Makefile	/^AUTOCONF = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoheader$/;"	m
AUTOHEADER	example/Makefile	/^AUTOHEADER = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoheader$/;"	m
AUTOHEADER	sz/Makefile	/^AUTOHEADER = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoheader$/;"	m
AUTOHEADER	zlib/Makefile	/^AUTOHEADER = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing automake-1.13$/;"	m
AUTOMAKE	example/Makefile	/^AUTOMAKE = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing automake-1.13$/;"	m
AUTOMAKE	sz/Makefile	/^AUTOMAKE = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing automake-1.13$/;"	m
AUTOMAKE	zlib/Makefile	/^AUTOMAKE = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing automake-1.13$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AUTOMAKE_OPTIONS	example/Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AUTOMAKE_OPTIONS	sz/Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AUTOMAKE_OPTIONS	zlib/Makefile	/^AUTOMAKE_OPTIONS = foreign$/;"	m
AWK	Makefile	/^AWK = mawk$/;"	m
AWK	example/Makefile	/^AWK = mawk$/;"	m
AWK	sz/Makefile	/^AWK = mawk$/;"	m
AWK	zlib/Makefile	/^AWK = mawk$/;"	m
Assert	zlib/zutil.h	223;"	d
Assert	zlib/zutil.h	230;"	d
BAD	zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon3
BASE	zlib/adler32.c	14;"	d	file:
BIG_ENDIAN_DATA	sz/include/sz.h	54;"	d
BIG_ENDIAN_SYSTEM	sz/include/sz.h	57;"	d
BITS	zlib/infback.c	190;"	d	file:
BITS	zlib/inflate.c	506;"	d	file:
BL_CODES	zlib/deflate.h	42;"	d
BUILDFIXED	zlib/inflate.c	90;"	d	file:
BUSY_STATE	zlib/deflate.h	59;"	d
BYFOUR	zlib/crc32.c	37;"	d	file:
BYTEBITS	zlib/infback.c	201;"	d	file:
BYTEBITS	zlib/inflate.c	517;"	d	file:
Buf_size	zlib/deflate.h	51;"	d
Byte	zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	zlib/zconf.h	128;"	d
Bytef	zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	zlib/zconf.h	129;"	d
Bytef	zlib/zconf.h	375;"	d
Bytes	example/testdouble_batch_f.f90	/^        INTEGER(kind=1), DIMENSION(:), allocatable :: Bytes$/;"	v	program:p
Bytes	example/testdouble_compress_f.f90	/^        INTEGER(kind=1), DIMENSION(:), allocatable :: Bytes$/;"	v	program:p
CC	Makefile	/^CC = gcc$/;"	m
CC	example/Makefile	/^CC = gcc$/;"	m
CC	sz/Makefile	/^CC = gcc$/;"	m
CC	zlib/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	example/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	sz/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	zlib/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	example/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	sz/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	zlib/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -O3$/;"	m
CFLAGS	example/Makefile	/^CFLAGS = -O3$/;"	m
CFLAGS	sz/Makefile	/^CFLAGS = -O3$/;"	m
CFLAGS	zlib/Makefile	/^CFLAGS = -O3$/;"	m
CHECK	zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon3
CHECK_ERR	sz/src/test_zlib.c	17;"	d	file:
CHOP	zlib/adler32.c	29;"	d	file:
CLEAR_HASH	zlib/deflate.c	196;"	d	file:
CODELENS	zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon3
CODES	zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon2
COMMENT	zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon3
COMMENT_STATE	zlib/deflate.h	57;"	d
COMPILE	example/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	sz/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	zlib/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	example/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	sz/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	zlib/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	example/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	sz/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zlib/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	example/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	sz/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	zlib/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
COPY	zlib/gzguts.h	157;"	d
COPY	zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon3
COPY_	zlib/inflate.h	/^        COPY_,      \/* i\/o: same as COPY below, but only first time in *\/$/;"	e	enum:__anon3
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	example/Makefile	/^CPP = gcc -E$/;"	m
CPP	sz/Makefile	/^CPP = gcc -E$/;"	m
CPP	zlib/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	example/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	sz/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	zlib/Makefile	/^CPPFLAGS = $/;"	m
CRC2	zlib/inflate.c	441;"	d	file:
CRC4	zlib/inflate.c	448;"	d	file:
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	example/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	sz/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	zlib/Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	example/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	sz/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	zlib/Makefile	/^CYGPATH_W = echo$/;"	m
Code	zlib/deflate.h	77;"	d
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DEFAULT_INCLUDES	example/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	sz/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	zlib/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFLATE_H	zlib/deflate.h	14;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	example/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	sz/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	zlib/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_MEM_LEVEL	zlib/gzguts.h	140;"	d
DEF_MEM_LEVEL	zlib/gzguts.h	142;"	d
DEF_MEM_LEVEL	zlib/zutil.h	64;"	d
DEF_MEM_LEVEL	zlib/zutil.h	66;"	d
DEF_WBITS	zlib/zutil.h	59;"	d
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	example/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	sz/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	zlib/Makefile	/^DEPDIR = .deps$/;"	m
DICT	zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon3
DICTID	zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon3
DICTMINSZ	sz/src/dictionary.c	27;"	d	file:
DICT_INVALID_KEY	sz/src/dictionary.c	30;"	d	file:
DIST	zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon3
DISTEXT	zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon3
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	example/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	sz/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	zlib/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTS	zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon2
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_CODE_LEN	zlib/trees.c	81;"	d	file:
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	example/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	sz/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	zlib/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	example/Makefile	/^DIST_SOURCES = $(testdouble_batch_compress_SOURCES) \\$/;"	m
DIST_SOURCES	sz/Makefile	/^DIST_SOURCES = $(am__libsz_la_SOURCES_DIST)$/;"	m
DIST_SOURCES	zlib/Makefile	/^DIST_SOURCES = $(libzlib_la_SOURCES)$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	example/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	sz/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	zlib/Makefile	/^DLLTOOL = false$/;"	m
DO1	zlib/adler32.c	18;"	d	file:
DO1	zlib/crc32.c	200;"	d	file:
DO16	zlib/adler32.c	22;"	d	file:
DO2	zlib/adler32.c	19;"	d	file:
DO4	zlib/adler32.c	20;"	d	file:
DO8	zlib/adler32.c	21;"	d	file:
DO8	zlib/crc32.c	201;"	d	file:
DOBIG32	zlib/crc32.c	284;"	d	file:
DOBIG4	zlib/crc32.c	281;"	d	file:
DOLIT32	zlib/crc32.c	244;"	d	file:
DOLIT4	zlib/crc32.c	241;"	d	file:
DONE	zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon3
DROPBITS	zlib/infback.c	194;"	d	file:
DROPBITS	zlib/inflate.c	510;"	d	file:
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	example/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	sz/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	zlib/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	example/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	sz/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	zlib/Makefile	/^DUMPBIN = $/;"	m
DYNAMIC_CRC_TABLE	zlib/crc32.c	27;"	d	file:
DYN_TREES	zlib/zutil.h	72;"	d
D_CODES	zlib/deflate.h	39;"	d
Dad	zlib/deflate.h	78;"	d
DoubleValueCompressElement	sz/include/CompressElement.h	/^typedef struct DoubleValueCompressElement$/;"	s
DoubleValueCompressElement	sz/include/CompressElement.h	/^} DoubleValueCompressElement;$/;"	t	typeref:struct:DoubleValueCompressElement
DynArrayInitLen	sz/include/sz.h	59;"	d
DynamicByteArray	sz/include/DynamicByteArray.h	/^typedef struct DynamicByteArray$/;"	s
DynamicByteArray	sz/include/DynamicByteArray.h	/^} DynamicByteArray;$/;"	t	typeref:struct:DynamicByteArray
DynamicDoubleArray	sz/include/DynamicDoubleArray.h	/^typedef struct DynamicDoubleArray$/;"	s
DynamicDoubleArray	sz/include/DynamicDoubleArray.h	/^} DynamicDoubleArray;$/;"	t	typeref:struct:DynamicDoubleArray
DynamicFloatArray	sz/include/DynamicFloatArray.h	/^typedef struct DynamicFloatArray$/;"	s
DynamicFloatArray	sz/include/DynamicFloatArray.h	/^} DynamicFloatArray;$/;"	t	typeref:struct:DynamicFloatArray
DynamicIntArray	sz/include/DynamicIntArray.h	/^typedef struct DynamicIntArray$/;"	s
DynamicIntArray	sz/include/DynamicIntArray.h	/^} DynamicIntArray;$/;"	t	typeref:struct:DynamicIntArray
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	example/Makefile	/^ECHO_C = $/;"	m
ECHO_C	sz/Makefile	/^ECHO_C = $/;"	m
ECHO_C	zlib/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	example/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	sz/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	zlib/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	example/Makefile	/^ECHO_T = $/;"	m
ECHO_T	sz/Makefile	/^ECHO_T = $/;"	m
ECHO_T	zlib/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	example/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	sz/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	zlib/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
END_BLOCK	zlib/trees.c	50;"	d	file:
ENOUGH	zlib/inftrees.h	51;"	d
ENOUGH_DISTS	zlib/inftrees.h	50;"	d
ENOUGH_LENS	zlib/inftrees.h	49;"	d
EQUAL	zlib/deflate.c	151;"	d	file:
ERR_MSG	zlib/zutil.h	50;"	d
ERR_RETURN	zlib/zutil.h	52;"	d
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	example/Makefile	/^ETAGS = etags$/;"	m
ETAGS	sz/Makefile	/^ETAGS = etags$/;"	m
ETAGS	zlib/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	example/Makefile	/^EXEEXT = $/;"	m
EXEEXT	sz/Makefile	/^EXEEXT = $/;"	m
EXEEXT	zlib/Makefile	/^EXEEXT = $/;"	m
EXLEN	zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon3
EXTRA	zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon3
EXTRA_STATE	zlib/deflate.h	55;"	d
FAR	zlib/zconf.h	292;"	d
FAR	zlib/zconf.h	294;"	d
FAR	zlib/zconf.h	301;"	d
FAR	zlib/zconf.h	303;"	d
FAR	zlib/zconf.h	327;"	d
FAR	zlib/zconf.h	364;"	d
FC	Makefile	/^FC = gfortran$/;"	m
FC	example/Makefile	/^FC = gfortran$/;"	m
FC	sz/Makefile	/^FC = gfortran$/;"	m
FC	zlib/Makefile	/^FC = gfortran$/;"	m
FCCOMPILE	example/Makefile	/^FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)$/;"	m
FCFLAGS	Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	example/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	sz/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCFLAGS	zlib/Makefile	/^FCFLAGS = -g -O2$/;"	m
FCLD	example/Makefile	/^FCLD = $(FC)$/;"	m
FCLD	sz/Makefile	/^FCLD = $(FC)$/;"	m
FCLINK	example/Makefile	/^FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\$/;"	m
FCLINK	sz/Makefile	/^FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\$/;"	m
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	example/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	sz/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	zlib/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FINISH_STATE	zlib/deflate.h	60;"	d
FLAGS	zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon3
FLUSH_BLOCK	zlib/deflate.c	1550;"	d	file:
FLUSH_BLOCK_ONLY	zlib/deflate.c	1538;"	d	file:
F_OPEN	zlib/zutil.h	106;"	d
F_OPEN	zlib/zutil.h	184;"	d
FloatValueCompressElement	sz/include/CompressElement.h	/^typedef struct FloatValueCompressElement$/;"	s
FloatValueCompressElement	sz/include/CompressElement.h	/^} FloatValueCompressElement;$/;"	t	typeref:struct:FloatValueCompressElement
Freq	zlib/deflate.h	76;"	d
GF2_DIM	zlib/crc32.c	324;"	d	file:
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	example/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	sz/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	zlib/Makefile	/^GREP = \/bin\/grep$/;"	m
GT_OFF	zlib/gzguts.h	205;"	d
GT_OFF	zlib/gzguts.h	208;"	d
GUNZIP	zlib/inflate.h	16;"	d
GZBUFSIZE	zlib/gzguts.h	147;"	d
GZIP	zlib/deflate.h	23;"	d
GZIP	zlib/gzguts.h	158;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GZ_APPEND	zlib/gzguts.h	153;"	d
GZ_NONE	zlib/gzguts.h	150;"	d
GZ_READ	zlib/gzguts.h	151;"	d
GZ_WRITE	zlib/gzguts.h	152;"	d
HAVE_DLFCN_H	config.h	5;"	d
HAVE_FCNTL_H	config.h	8;"	d
HAVE_INTTYPES_H	config.h	11;"	d
HAVE_LIMITS_H	config.h	14;"	d
HAVE_MALLOC	config.h	18;"	d
HAVE_MALLOC_H	config.h	21;"	d
HAVE_MEMCHR	config.h	24;"	d
HAVE_MEMCPY	zlib/zutil.h	200;"	d
HAVE_MEMORY_H	config.h	27;"	d
HAVE_MEMSET	config.h	30;"	d
HAVE_PTRDIFF_T	config.h	33;"	d
HAVE_REALLOC	config.h	37;"	d
HAVE_STDDEF_H	config.h	40;"	d
HAVE_STDINT_H	config.h	43;"	d
HAVE_STDLIB_H	config.h	46;"	d
HAVE_STRCHR	config.h	49;"	d
HAVE_STRINGS_H	config.h	52;"	d
HAVE_STRING_H	config.h	55;"	d
HAVE_STRTOL	config.h	58;"	d
HAVE_SYS_STAT_H	config.h	61;"	d
HAVE_SYS_TIME_H	config.h	64;"	d
HAVE_SYS_TYPES_H	config.h	67;"	d
HAVE_UNISTD_H	config.h	70;"	d
HAVE_VSNPRINTF	zlib/gzguts.h	51;"	d
HAVE_VSNPRINTF	zlib/gzguts.h	57;"	d
HAVE_VSNPRINTF	zlib/gzguts.h	63;"	d
HCRC	zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon3
HCRC_STATE	zlib/deflate.h	58;"	d
HEAD	zlib/inflate.h	/^    HEAD,       \/* i: waiting for magic header *\/$/;"	e	enum:__anon3
HEADERS	sz/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	zlib/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEAP_SIZE	zlib/deflate.h	45;"	d
HZ	sz/include/sz.h	41;"	d
INITBITS	zlib/infback.c	150;"	d	file:
INITBITS	zlib/inflate.c	481;"	d	file:
INIT_STATE	zlib/deflate.h	54;"	d
INI_INVALID_KEY	sz/src/iniparser.c	15;"	d	file:
INSERT_STRING	zlib/deflate.c	181;"	d	file:
INSERT_STRING	zlib/deflate.c	186;"	d	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	example/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	sz/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	zlib/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	example/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	sz/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	zlib/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	example/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	sz/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	zlib/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	example/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	sz/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	zlib/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	example/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	sz/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	zlib/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	example/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	sz/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	zlib/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
IPos	zlib/deflate.h	/^typedef unsigned IPos;$/;"	t
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	example/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	sz/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	zlib/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	example/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	sz/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	zlib/Makefile	/^LDFLAGS = $/;"	m
LEN	zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit\/eob code *\/$/;"	e	enum:__anon3
LENEXT	zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon3
LENGTH	zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon3
LENGTH_CODES	zlib/deflate.h	30;"	d
LENLENS	zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon3
LENS	zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon2
LEN_	zlib/inflate.h	/^            LEN_,       \/* i: same as LEN below, but only first time in *\/$/;"	e	enum:__anon3
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	example/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	sz/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	zlib/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	example/Makefile	/^LIBS = $/;"	m
LIBS	sz/Makefile	/^LIBS = $/;"	m
LIBS	zlib/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	example/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	sz/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	zlib/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINE_COMMENT	sz/src/iniparser.c	/^    LINE_COMMENT,$/;"	e	enum:_line_status_	file:
LINE_EMPTY	sz/src/iniparser.c	/^    LINE_EMPTY,$/;"	e	enum:_line_status_	file:
LINE_ERROR	sz/src/iniparser.c	/^    LINE_ERROR,$/;"	e	enum:_line_status_	file:
LINE_SECTION	sz/src/iniparser.c	/^    LINE_SECTION,$/;"	e	enum:_line_status_	file:
LINE_UNPROCESSED	sz/src/iniparser.c	/^    LINE_UNPROCESSED,$/;"	e	enum:_line_status_	file:
LINE_VALUE	sz/src/iniparser.c	/^    LINE_VALUE$/;"	e	enum:_line_status_	file:
LINK	example/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	sz/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	zlib/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	example/Makefile	/^LIPO = $/;"	m
LIPO	sz/Makefile	/^LIPO = $/;"	m
LIPO	zlib/Makefile	/^LIPO = $/;"	m
LIT	zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon3
LITERALS	zlib/deflate.h	33;"	d
LITTLE_ENDIAN_DATA	sz/include/sz.h	53;"	d
LITTLE_ENDIAN_SYSTEM	sz/include/sz.h	56;"	d
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	example/Makefile	/^LN_S = ln -s$/;"	m
LN_S	sz/Makefile	/^LN_S = ln -s$/;"	m
LN_S	zlib/Makefile	/^LN_S = ln -s$/;"	m
LOAD	zlib/infback.c	128;"	d	file:
LOAD	zlib/inflate.c	459;"	d	file:
LOOK	zlib/gzguts.h	156;"	d
LSEEK	zlib/gzlib.c	12;"	d	file:
LSEEK	zlib/gzlib.c	14;"	d	file:
LSEEK	zlib/gzlib.c	9;"	d	file:
LTCOMPILE	example/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	sz/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	zlib/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTFCCOMPILE	example/Makefile	/^LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	example/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	sz/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	zlib/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	sz/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LTLIBRARIES	zlib/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LTPPFCCOMPILE	sz/Makefile	/^LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\$/;"	m
LT_OBJDIR	config.h	74;"	d
L_CODES	zlib/deflate.h	36;"	d
Len	zlib/deflate.h	79;"	d
LossyCompressionElement	sz/include/CompressElement.h	/^typedef struct LossyCompressionElement$/;"	s
LossyCompressionElement	sz/include/CompressElement.h	/^} LossyCompressionElement;$/;"	t	typeref:struct:LossyCompressionElement
MAINT	Makefile	/^MAINT = #$/;"	m
MAINT	example/Makefile	/^MAINT = #$/;"	m
MAINT	sz/Makefile	/^MAINT = #$/;"	m
MAINT	zlib/Makefile	/^MAINT = #$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing makeinfo$/;"	m
MAKEINFO	example/Makefile	/^MAKEINFO = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing makeinfo$/;"	m
MAKEINFO	sz/Makefile	/^MAKEINFO = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing makeinfo$/;"	m
MAKEINFO	zlib/Makefile	/^MAKEINFO = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	example/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	sz/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	zlib/Makefile	/^MANIFEST_TOOL = :$/;"	m
MATCH	zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon3
MAXBITS	zlib/inftrees.c	9;"	d	file:
MAXSEG_64K	zlib/zconf.h	182;"	d
MAXVALSZ	sz/src/dictionary.c	24;"	d	file:
MAX_BITS	zlib/deflate.h	48;"	d
MAX_BL_BITS	zlib/trees.c	47;"	d	file:
MAX_DIST	zlib/deflate.h	286;"	d
MAX_MATCH	zlib/zutil.h	76;"	d
MAX_MEM_LEVEL	zlib/zconf.h	235;"	d
MAX_MEM_LEVEL	zlib/zconf.h	237;"	d
MAX_PTR	zlib/zutil.c	202;"	d	file:
MAX_WBITS	zlib/zconf.h	247;"	d
MEM	zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon3
MIN_LOOKAHEAD	zlib/deflate.h	281;"	d
MIN_MATCH	zlib/zutil.h	75;"	d
MIN_ZLIB_DEC_ALLOMEM_BYTES	sz/include/sz.h	61;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	example/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	sz/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	zlib/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MOD	zlib/adler32.c	40;"	d	file:
MOD	zlib/adler32.c	59;"	d	file:
MOD28	zlib/adler32.c	35;"	d	file:
MOD28	zlib/adler32.c	60;"	d	file:
MOD63	zlib/adler32.c	45;"	d	file:
MOD63	zlib/adler32.c	61;"	d	file:
MSDOS	zlib/zconf.h	156;"	d
MY_ZCALLOC	zlib/zutil.c	194;"	d	file:
MY_ZCALLOC	zlib/zutil.c	272;"	d	file:
NAME	zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon3
NAME_STATE	zlib/deflate.h	56;"	d
NEEDBITS	zlib/infback.c	183;"	d	file:
NEEDBITS	zlib/inflate.c	499;"	d	file:
NIL	zlib/deflate.c	104;"	d	file:
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	example/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	sz/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	zlib/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMAX	zlib/adler32.c	15;"	d	file:
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	example/Makefile	/^NMEDIT = $/;"	m
NMEDIT	sz/Makefile	/^NMEDIT = $/;"	m
NMEDIT	zlib/Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	example/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	sz/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	zlib/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	example/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	sz/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	zlib/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NO_DUMMY_DECL	zlib/zconf.h	229;"	d
NO_GZCOMPRESS	zlib/gzguts.h	46;"	d
NO_MEMCPY	zlib/zutil.h	190;"	d
NO_MEMCPY	zlib/zutil.h	197;"	d
NO_vsnprintf	zlib/gzguts.h	71;"	d
NO_vsnprintf	zlib/gzguts.h	74;"	d
NO_vsnprintf	zlib/gzguts.h	85;"	d
NO_vsnprintf	zlib/gzguts.h	88;"	d
NO_vsnprintf	zlib/gzguts.h	91;"	d
NO_vsnprintf	zlib/gzguts.h	94;"	d
NVALS	sz/src/dictionary.c	359;"	d	file:
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	example/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	sz/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	zlib/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	example/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	sz/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	zlib/Makefile	/^OBJEXT = o$/;"	m
OF	zlib/zconf.h	267;"	d
OF	zlib/zconf.h	269;"	d
OFF	zlib/inffast.c	25;"	d	file:
OFF	zlib/inffast.c	28;"	d	file:
OS	zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon3
OS2	zlib/zconf.h	159;"	d
OS_CODE	zlib/zutil.h	101;"	d
OS_CODE	zlib/zutil.h	105;"	d
OS_CODE	zlib/zutil.h	111;"	d
OS_CODE	zlib/zutil.h	115;"	d
OS_CODE	zlib/zutil.h	122;"	d
OS_CODE	zlib/zutil.h	135;"	d
OS_CODE	zlib/zutil.h	140;"	d
OS_CODE	zlib/zutil.h	145;"	d
OS_CODE	zlib/zutil.h	180;"	d
OS_CODE	zlib/zutil.h	84;"	d
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	example/Makefile	/^OTOOL = $/;"	m
OTOOL	sz/Makefile	/^OTOOL = $/;"	m
OTOOL	zlib/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	example/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	sz/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	zlib/Makefile	/^OTOOL64 = $/;"	m
PACKAGE	Makefile	/^PACKAGE = sz$/;"	m
PACKAGE	config.h	77;"	d
PACKAGE	example/Makefile	/^PACKAGE = sz$/;"	m
PACKAGE	sz/Makefile	/^PACKAGE = sz$/;"	m
PACKAGE	zlib/Makefile	/^PACKAGE = sz$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = sdi1@anl.gov$/;"	m
PACKAGE_BUGREPORT	config.h	80;"	d
PACKAGE_BUGREPORT	example/Makefile	/^PACKAGE_BUGREPORT = sdi1@anl.gov$/;"	m
PACKAGE_BUGREPORT	sz/Makefile	/^PACKAGE_BUGREPORT = sdi1@anl.gov$/;"	m
PACKAGE_BUGREPORT	zlib/Makefile	/^PACKAGE_BUGREPORT = sdi1@anl.gov$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = SZ$/;"	m
PACKAGE_NAME	config.h	83;"	d
PACKAGE_NAME	example/Makefile	/^PACKAGE_NAME = SZ$/;"	m
PACKAGE_NAME	sz/Makefile	/^PACKAGE_NAME = SZ$/;"	m
PACKAGE_NAME	zlib/Makefile	/^PACKAGE_NAME = SZ$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = SZ 1.4$/;"	m
PACKAGE_STRING	config.h	86;"	d
PACKAGE_STRING	example/Makefile	/^PACKAGE_STRING = SZ 1.4$/;"	m
PACKAGE_STRING	sz/Makefile	/^PACKAGE_STRING = SZ 1.4$/;"	m
PACKAGE_STRING	zlib/Makefile	/^PACKAGE_STRING = SZ 1.4$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = sz$/;"	m
PACKAGE_TARNAME	config.h	89;"	d
PACKAGE_TARNAME	example/Makefile	/^PACKAGE_TARNAME = sz$/;"	m
PACKAGE_TARNAME	sz/Makefile	/^PACKAGE_TARNAME = sz$/;"	m
PACKAGE_TARNAME	zlib/Makefile	/^PACKAGE_TARNAME = sz$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	92;"	d
PACKAGE_URL	example/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	sz/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	zlib/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.4$/;"	m
PACKAGE_VERSION	config.h	95;"	d
PACKAGE_VERSION	example/Makefile	/^PACKAGE_VERSION = 1.4$/;"	m
PACKAGE_VERSION	sz/Makefile	/^PACKAGE_VERSION = 1.4$/;"	m
PACKAGE_VERSION	zlib/Makefile	/^PACKAGE_VERSION = 1.4$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	example/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	sz/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	sz/include/rw.h	16;"	d
PATH_SEPARATOR	sz/include/rw.h	18;"	d
PATH_SEPARATOR	sz/include/sz.h	26;"	d
PATH_SEPARATOR	sz/include/sz.h	28;"	d
PATH_SEPARATOR	zlib/Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	example/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	sz/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	zlib/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	example/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	sz/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	zlib/Makefile	/^POST_UNINSTALL = :$/;"	m
PPFCCOMPILE	sz/Makefile	/^PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
PRESET_DICT	zlib/zutil.h	79;"	d
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	example/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	sz/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	zlib/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	example/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	sz/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	zlib/Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	example/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PULL	zlib/infback.c	158;"	d	file:
PULLBYTE	zlib/infback.c	172;"	d	file:
PULLBYTE	zlib/inflate.c	489;"	d	file:
PUP	zlib/inffast.c	26;"	d	file:
PUP	zlib/inffast.c	29;"	d	file:
PW_REL	sz/include/sz.h	48;"	d
Pos	zlib/deflate.h	/^typedef ush Pos;$/;"	t
Posf	zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t
RANK	zlib/deflate.c	159;"	d	file:
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	example/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	sz/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	zlib/Makefile	/^RANLIB = ranlib$/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REL	sz/include/sz.h	45;"	d
REPZ_11_138	zlib/trees.c	59;"	d	file:
REPZ_3_10	zlib/trees.c	56;"	d	file:
REP_3_6	zlib/trees.c	53;"	d	file:
RESTORE	zlib/infback.c	139;"	d	file:
RESTORE	zlib/inflate.c	470;"	d	file:
ROOM	zlib/infback.c	210;"	d	file:
RW	sz/src/rw_interface.F90	/^MODULE RW$/;"	m
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	example/Makefile	/^SED = \/bin\/sed$/;"	m
SED	sz/Makefile	/^SED = \/bin\/sed$/;"	m
SED	zlib/Makefile	/^SED = \/bin\/sed$/;"	m
SEEK_CUR	zlib/zconf.h	476;"	d
SEEK_END	zlib/zconf.h	477;"	d
SEEK_SET	zlib/zconf.h	475;"	d
SEPARATOR	zlib/trees.c	324;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	example/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	sz/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	zlib/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	example/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	sz/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	zlib/Makefile	/^SHELL = \/bin\/bash$/;"	m
SMALLEST	zlib/trees.c	424;"	d	file:
SMALL_MEDIUM	zlib/zconf.h	290;"	d
SMALL_MEDIUM	zlib/zconf.h	299;"	d
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	example/Makefile	/^SOURCES = $(testdouble_batch_compress_SOURCES) \\$/;"	m
SOURCES	sz/Makefile	/^SOURCES = $(libsz_la_SOURCES)$/;"	m
SOURCES	zlib/Makefile	/^SOURCES = $(libzlib_la_SOURCES)$/;"	m
STATIC_TREES	zlib/zutil.h	71;"	d
STDC	zlib/zconf.h	190;"	d
STDC	zlib/zconf.h	199;"	d
STDC	zlib/zconf.h	202;"	d
STDC	zlib/zconf.h	205;"	d
STDC	zlib/zconf.h	208;"	d
STDC	zlib/zconf.h	212;"	d
STDC99	zlib/zconf.h	194;"	d
STDC_HEADERS	config.h	98;"	d
STORED	zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon3
STORED_BLOCK	zlib/zutil.h	70;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	example/Makefile	/^STRIP = strip$/;"	m
STRIP	sz/Makefile	/^STRIP = strip$/;"	m
STRIP	zlib/Makefile	/^STRIP = strip$/;"	m
SUBDIRS	Makefile	/^SUBDIRS = zlib sz example$/;"	m
SYNC	zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon3
SYS16BIT	zlib/zconf.h	172;"	d
SZ	sz/include/sz.h	42;"	d
SZ	sz/src/sz_interface.F90	/^MODULE SZ$/;"	m
SZ_BERR	sz/include/sz.h	77;"	d
SZ_BEST_COMPRESSION	sz/include/sz.h	67;"	d
SZ_BEST_SPEED	sz/include/sz.h	66;"	d
SZ_BatchAddVar_d1_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d1_Fortran_REAL_K4(/;"	s	module:SZ
SZ_BatchAddVar_d1_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d1_Fortran_REAL_K8(/;"	s	module:SZ
SZ_BatchAddVar_d2_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d2_Fortran_REAL_K4(/;"	s	module:SZ
SZ_BatchAddVar_d2_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d2_Fortran_REAL_K8(/;"	s	module:SZ
SZ_BatchAddVar_d3_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d3_Fortran_REAL_K4(/;"	s	module:SZ
SZ_BatchAddVar_d3_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d3_Fortran_REAL_K8(/;"	s	module:SZ
SZ_BatchAddVar_d4_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d4_Fortran_REAL_K4(/;"	s	module:SZ
SZ_BatchAddVar_d4_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d4_Fortran_REAL_K8(/;"	s	module:SZ
SZ_BatchAddVar_d5_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d5_Fortran_REAL_K4(/;"	s	module:SZ
SZ_BatchAddVar_d5_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchAddVar_d5_Fortran_REAL_K8(/;"	s	module:SZ
SZ_BatchDelVar	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_BatchDelVar(/;"	s	module:SZ
SZ_Batch_Compress	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Batch_Compress(/;"	s	module:SZ
SZ_Batch_Decompress	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Batch_Decompress(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K4_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K4_ARGS(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K4_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K4_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K4_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K4_Rev(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K8_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K8_ARGS(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K8_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K8_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d1_Fortran_REAL_K8_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d1_Fortran_REAL_K8_Rev(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K4_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K4_ARGS(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K4_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K4_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K4_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K4_Rev(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K8_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K8_ARGS(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K8_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K8_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d2_Fortran_REAL_K8_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d2_Fortran_REAL_K8_Rev(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K4_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K4_ARGS(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K4_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K4_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K4_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K4_Rev(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K8_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K8_ARGS(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K8_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K8_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d3_Fortran_REAL_K8_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d3_Fortran_REAL_K8_Rev(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K4_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K4_ARGS(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K4_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K4_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K4_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K4_Rev(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K8_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K8_ARGS(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K8_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K8_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d4_Fortran_REAL_K8_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d4_Fortran_REAL_K8_Rev(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K4_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K4_ARGS(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K4_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K4_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K4_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K4_Rev(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K8_ARGS	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K8_ARGS(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K8_ARGS_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K8_ARGS_Rev(/;"	s	module:SZ
SZ_Compress_d5_Fortran_REAL_K8_Rev	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Compress_d5_Fortran_REAL_K8_Rev(/;"	s	module:SZ
SZ_DEFAULT_COMPRESSION	sz/include/sz.h	68;"	d
SZ_DERR	sz/include/sz.h	75;"	d
SZ_DESTROY_WHOLE_VARSET	sz/include/sz.h	80;"	d
SZ_DOUBLE	sz/include/sz.h	51;"	d
SZ_Decompress_d1_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d1_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Decompress_d1_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d1_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Decompress_d2_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d2_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Decompress_d2_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d2_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Decompress_d3_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d3_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Decompress_d3_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d3_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Decompress_d4_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d4_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Decompress_d4_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d4_Fortran_REAL_K8(/;"	s	module:SZ
SZ_Decompress_d5_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d5_Fortran_REAL_K4(/;"	s	module:SZ
SZ_Decompress_d5_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Decompress_d5_Fortran_REAL_K8(/;"	s	module:SZ
SZ_FERR	sz/include/sz.h	73;"	d
SZ_FLOAT	sz/include/sz.h	50;"	d
SZ_FREE_VARSET	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_FREE_VARSET(/;"	s	module:SZ
SZ_Finalize	sz/src/sz.c	/^void SZ_Finalize()$/;"	f
SZ_Finalize	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Finalize(/;"	s	module:SZ
SZ_GetVarData_d1_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d1_Fortran_REAL_K4(/;"	s	module:SZ
SZ_GetVarData_d1_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d1_Fortran_REAL_K8(/;"	s	module:SZ
SZ_GetVarData_d2_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d2_Fortran_REAL_K4(/;"	s	module:SZ
SZ_GetVarData_d2_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d2_Fortran_REAL_K8(/;"	s	module:SZ
SZ_GetVarData_d3_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d3_Fortran_REAL_K4(/;"	s	module:SZ
SZ_GetVarData_d3_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d3_Fortran_REAL_K8(/;"	s	module:SZ
SZ_GetVarData_d4_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d4_Fortran_REAL_K4(/;"	s	module:SZ
SZ_GetVarData_d4_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d4_Fortran_REAL_K8(/;"	s	module:SZ
SZ_GetVarData_d5_Fortran_REAL_K4	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d5_Fortran_REAL_K4(/;"	s	module:SZ
SZ_GetVarData_d5_Fortran_REAL_K8	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarData_d5_Fortran_REAL_K8(/;"	s	module:SZ
SZ_GetVarDim	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_GetVarDim(/;"	s	module:SZ
SZ_Init	sz/src/sz.c	/^int SZ_Init(char *configFilePath)$/;"	f
SZ_Init	sz/src/sz_interface.F90	/^	SUBROUTINE SZ_Init(/;"	s	module:SZ
SZ_Init_Params	sz/src/sz.c	/^int SZ_Init_Params(sz_params *params)$/;"	f
SZ_LoadConf	sz/src/conf.c	/^int SZ_LoadConf() {$/;"	f
SZ_MAINTAIN_VAR_DATA	sz/include/sz.h	79;"	d
SZ_MERR	sz/include/sz.h	76;"	d
SZ_NSCS	sz/include/sz.h	72;"	d
SZ_ReadConf	sz/src/conf.c	/^int SZ_ReadConf() {$/;"	f
SZ_ReleaseHuffman	sz/src/Huffman.c	/^void SZ_ReleaseHuffman()$/;"	f
SZ_Reset	sz/src/sz.c	/^void SZ_Reset()$/;"	f
SZ_SCES	sz/include/sz.h	71;"	d
SZ_TERR	sz/include/sz.h	74;"	d
SZ_VERNUM	sz/include/sz.h	35;"	d
SZ_VER_BUILD	sz/include/sz.h	38;"	d
SZ_VER_MAJOR	sz/include/sz.h	36;"	d
SZ_VER_MINOR	sz/include/sz.h	37;"	d
SZ_VER_REVISION	sz/include/sz.h	39;"	d
SZ_VarSet	sz/include/VarSet.h	/^typedef struct SZ_VarSet$/;"	s
SZ_VarSet	sz/include/VarSet.h	/^} SZ_VarSet;$/;"	t	typeref:struct:SZ_VarSet
SZ_Variable	sz/include/VarSet.h	/^typedef struct SZ_Variable$/;"	s
SZ_Variable	sz/include/VarSet.h	/^} SZ_Variable;$/;"	t	typeref:struct:SZ_Variable
SZ_batchAddVar	sz/src/VarSet.c	/^void SZ_batchAddVar(char* varName, int dataType, void* data, $/;"	f
SZ_batchDelVar	sz/src/VarSet.c	/^int SZ_batchDelVar(char* varName)$/;"	f
SZ_batchDelVar_vset	sz/src/VarSet.c	/^int SZ_batchDelVar_vset(SZ_VarSet* vset, char* varName)$/;"	f
SZ_batch_compress	sz/src/sz.c	/^unsigned char* SZ_batch_compress(int *outSize)$/;"	f
SZ_batch_decompress	sz/src/sz.c	/^SZ_VarSet* SZ_batch_decompress(unsigned char* compressedStream, int compressedLength, int *status)$/;"	f
SZ_compress	sz/src/sz.c	/^unsigned char *SZ_compress(int dataType, void *data, int *outSize, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_compress_args	sz/src/sz.c	/^unsigned char* SZ_compress_args(int dataType, void *data, int *outSize, int errBoundMode, double absErrBound, $/;"	f
SZ_compress_args2	sz/src/sz.c	/^int SZ_compress_args2(int dataType, void *data, unsigned char* compressed_bytes, int *outSize, int errBoundMode, double absErrBound, double relBoundRatio, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_compress_args3	sz/src/sz.c	/^int SZ_compress_args3(int dataType, void *data, unsigned char* compressed_bytes, int *outSize, int errBoundMode, double absErrBound, double relBoundRatio, $/;"	f
SZ_compress_args_double	sz/src/sz_double.c	/^int SZ_compress_args_double(unsigned char** newByteData, double *oriData, $/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_1D	sz/src/sz_double.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_1D(unsigned char** newByteData, double *oriData, $/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_1D_pwr	sz/src/sz_double_pwr.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_1D_pwr(unsigned char** newByteData, double *oriData, $/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_2D	sz/src/sz_double.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_2D(unsigned char** newByteData, double *oriData, int r1, int r2, double realPrecision, int *outSize, double valueRangeSize, double medianValue_d)$/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_2D_pwr	sz/src/sz_double_pwr.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_2D_pwr(unsigned char** newByteData, double *oriData, int r1, int r2,$/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_3D	sz/src/sz_double.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_3D(unsigned char** newByteData, double *oriData, int r1, int r2, int r3, double realPrecision, int *outSize, double valueRangeSize, double medianValue_d)$/;"	f
SZ_compress_args_double_NoCkRngeNoGzip_3D_pwr	sz/src/sz_double_pwr.c	/^void SZ_compress_args_double_NoCkRngeNoGzip_3D_pwr(unsigned char** newByteData, double *oriData, int r1, int r2, int r3, int *outSize, double min, double max)$/;"	f
SZ_compress_args_double_StoreOriData	sz/src/sz_double.c	/^void SZ_compress_args_double_StoreOriData(double* oriData, int dataLength, TightDataPointStorageD* tdps, $/;"	f
SZ_compress_args_double_subblock	sz/src/sz_double.c	/^int SZ_compress_args_double_subblock(unsigned char* compressedBytes, double *oriData, $/;"	f
SZ_compress_args_double_wRngeNoGzip	sz/src/sz_double.c	/^int SZ_compress_args_double_wRngeNoGzip(unsigned char** newByteData, double *oriData, $/;"	f
SZ_compress_args_double_withinRange	sz/src/sz_double.c	/^void SZ_compress_args_double_withinRange(unsigned char** newByteData, double *oriData, int dataLength, int *outSize)$/;"	f
SZ_compress_args_float	sz/src/sz_float.c	/^int SZ_compress_args_float(unsigned char** newByteData, float *oriData, $/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_1D	sz/src/sz_float.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_1D(unsigned char** newByteData, float *oriData, $/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_1D_pwr	sz/src/sz_float_pwr.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_1D_pwr(unsigned char** newByteData, float *oriData, $/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_2D	sz/src/sz_float.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_2D(unsigned char** newByteData, float *oriData, int r1, int r2, double realPrecision, int *outSize, float valueRangeSize, float medianValue_f)$/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_2D_pwr	sz/src/sz_float_pwr.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_2D_pwr(unsigned char** newByteData, float *oriData, int r1, int r2, $/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_3D	sz/src/sz_float.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_3D(unsigned char** newByteData, float *oriData, int r1, int r2, int r3, double realPrecision, int *outSize, float valueRangeSize, float medianValue_f)$/;"	f
SZ_compress_args_float_NoCkRngeNoGzip_3D_pwr	sz/src/sz_float_pwr.c	/^void SZ_compress_args_float_NoCkRngeNoGzip_3D_pwr(unsigned char** newByteData, float *oriData, int r1, int r2, int r3, $/;"	f
SZ_compress_args_float_StoreOriData	sz/src/sz_float.c	/^void SZ_compress_args_float_StoreOriData(float* oriData, int dataLength, TightDataPointStorageF* tdps, $/;"	f
SZ_compress_args_float_subblock	sz/src/sz_float.c	/^int SZ_compress_args_float_subblock(unsigned char* compressedBytes, float *oriData, $/;"	f
SZ_compress_args_float_wRngeNoGzip	sz/src/sz_float.c	/^int SZ_compress_args_float_wRngeNoGzip(unsigned char** newByteData, float *oriData, $/;"	f
SZ_compress_args_float_withinRange	sz/src/sz_float.c	/^void SZ_compress_args_float_withinRange(unsigned char** newByteData, float *oriData, int dataLength, int *outSize)$/;"	f
SZ_compress_double_1D_MDQ	sz/src/sz_double.c	/^TightDataPointStorageD* SZ_compress_double_1D_MDQ(double *oriData, $/;"	f
SZ_compress_double_2D_MDQ	sz/src/sz_double.c	/^TightDataPointStorageD* SZ_compress_double_2D_MDQ(double *oriData, int r1, int r2, double realPrecision, double valueRangeSize, double medianValue_d)$/;"	f
SZ_compress_double_3D_MDQ	sz/src/sz_double.c	/^TightDataPointStorageD* SZ_compress_double_3D_MDQ(double *oriData, int r1, int r2, int r3, double realPrecision, double valueRangeSize, double medianValue_d)$/;"	f
SZ_compress_float_1D_MDQ	sz/src/sz_float.c	/^TightDataPointStorageF* SZ_compress_float_1D_MDQ(float *oriData, $/;"	f
SZ_compress_float_2D_MDQ	sz/src/sz_float.c	/^TightDataPointStorageF* SZ_compress_float_2D_MDQ(float *oriData, int r1, int r2, double realPrecision, float valueRangeSize, float medianValue_f)$/;"	f
SZ_compress_float_3D_MDQ	sz/src/sz_float.c	/^TightDataPointStorageF* SZ_compress_float_3D_MDQ(float *oriData, int r1, int r2, int r3, double realPrecision, float valueRangeSize, float medianValue_f)$/;"	f
SZ_compress_rev	sz/src/sz.c	/^unsigned char *SZ_compress_rev(int dataType, void *data, void *reservedValue, int *outSize, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_compress_rev_args	sz/src/sz.c	/^unsigned char *SZ_compress_rev_args(int dataType, void *data, void *reservedValue, int *outSize, int errBoundMode, double absErrBound, double relBoundRatio, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_compress_rev_args2	sz/src/sz.c	/^int SZ_compress_rev_args2(int dataType, void *data, void *reservedValue, unsigned char* compressed_bytes, int *outSize, int errBoundMode, double absErrBound, double relBoundRatio, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_decompress	sz/src/sz.c	/^void *SZ_decompress(int dataType, unsigned char *bytes, int byteLength, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_decompress_args	sz/src/sz.c	/^int SZ_decompress_args(int dataType, unsigned char *bytes, int byteLength, void* decompressed_array, int r5, int r4, int r3, int r2, int r1)$/;"	f
SZ_decompress_args_double	sz/src/sz_double.c	/^int SZ_decompress_args_double(double** newData, int r5, int r4, int r3, int r2, int r1, unsigned char* cmpBytes, int cmpSize)$/;"	f
SZ_decompress_args_float	sz/src/sz_float.c	/^int SZ_decompress_args_float(float** newData, int r5, int r4, int r3, int r2, int r1, unsigned char* cmpBytes, int cmpSize)$/;"	f
SZ_freeVarSet	sz/src/VarSet.c	/^void SZ_freeVarSet(int mode)$/;"	f
SZ_getVarData	sz/src/VarSet.c	/^void* SZ_getVarData(char* varName, int *r5, int *r4, int *r3, int *r2, int *r1)$/;"	f
SZ_searchVar	sz/src/VarSet.c	/^SZ_Variable* SZ_searchVar(char* varName)$/;"	f
TABLE	zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon3
TBLS	zlib/crc32.c	44;"	d	file:
TBLS	zlib/crc32.c	46;"	d	file:
TIME	zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon3
TOO_FAR	zlib/deflate.c	108;"	d	file:
TRY_FREE	zlib/zutil.h	247;"	d
TYPE	zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon3
TYPEDO	zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon3
TightDataPointStorageD	sz/include/TightDataPointStorageD.h	/^typedef struct TightDataPointStorageD$/;"	s
TightDataPointStorageD	sz/include/TightDataPointStorageD.h	/^} TightDataPointStorageD;$/;"	t	typeref:struct:TightDataPointStorageD
TightDataPointStorageF	sz/include/TightDataPointStorageF.h	/^typedef struct TightDataPointStorageF$/;"	s
TightDataPointStorageF	sz/include/TightDataPointStorageF.h	/^} TightDataPointStorageF;$/;"	t	typeref:struct:TightDataPointStorageF
Trace	zlib/zutil.h	224;"	d
Trace	zlib/zutil.h	231;"	d
Tracec	zlib/zutil.h	227;"	d
Tracec	zlib/zutil.h	234;"	d
Tracecv	zlib/zutil.h	228;"	d
Tracecv	zlib/zutil.h	235;"	d
Tracev	zlib/zutil.h	225;"	d
Tracev	zlib/zutil.h	232;"	d
Tracevv	zlib/zutil.h	226;"	d
Tracevv	zlib/zutil.h	233;"	d
UNALIGNED_OK	zlib/zconf.h	185;"	d
UPDATE	zlib/inflate.c	433;"	d	file:
UPDATE	zlib/inflate.c	436;"	d	file:
UPDATE_HASH	zlib/deflate.c	167;"	d	file:
VERSION	Makefile	/^VERSION = 1.4$/;"	m
VERSION	config.h	101;"	d
VERSION	example/Makefile	/^VERSION = 1.4$/;"	m
VERSION	sz/Makefile	/^VERSION = 1.4$/;"	m
VERSION	zlib/Makefile	/^VERSION = 1.4$/;"	m
WIN32	zlib/zconf.h	166;"	d
WINDOWS	zlib/zconf.h	162;"	d
WIN_INIT	zlib/deflate.h	291;"	d
WriteData_inBinary_d1_INTEGER_K1	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d1_INTEGER_K1(/;"	s	module:RW
WriteData_inBinary_d1_REAL_K4	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d1_REAL_K4(/;"	s	module:RW
WriteData_inBinary_d1_REAL_K8	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d1_REAL_K8(/;"	s	module:RW
WriteData_inBinary_d2_REAL_K4	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d2_REAL_K4(/;"	s	module:RW
WriteData_inBinary_d2_REAL_K8	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d2_REAL_K8(/;"	s	module:RW
WriteData_inBinary_d3_REAL_K4	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d3_REAL_K4(/;"	s	module:RW
WriteData_inBinary_d3_REAL_K8	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d3_REAL_K8(/;"	s	module:RW
WriteData_inBinary_d4_REAL_K4	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d4_REAL_K4(/;"	s	module:RW
WriteData_inBinary_d4_REAL_K8	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d4_REAL_K8(/;"	s	module:RW
WriteData_inBinary_d5_REAL_K4	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d5_REAL_K4(/;"	s	module:RW
WriteData_inBinary_d5_REAL_K8	sz/src/rw_interface.F90	/^	SUBROUTINE WriteData_inBinary_d5_REAL_K8(/;"	s	module:RW
ZALLOC	zlib/zutil.h	244;"	d
ZCONF_H	zlib/zconf.h	9;"	d
ZEXPORT	zlib/zconf.h	332;"	d
ZEXPORT	zlib/zconf.h	344;"	d
ZEXPORT	zlib/zconf.h	347;"	d
ZEXPORT	zlib/zconf.h	357;"	d
ZEXPORTVA	zlib/zconf.h	334;"	d
ZEXPORTVA	zlib/zconf.h	336;"	d
ZEXPORTVA	zlib/zconf.h	345;"	d
ZEXPORTVA	zlib/zconf.h	348;"	d
ZEXPORTVA	zlib/zconf.h	360;"	d
ZEXTERN	zlib/zconf.h	315;"	d
ZEXTERN	zlib/zconf.h	317;"	d
ZEXTERN	zlib/zconf.h	354;"	d
ZFREE	zlib/zutil.h	246;"	d
ZLIB_H	zlib/zlib.h	32;"	d
ZLIB_INTERNAL	zlib/compress.c	8;"	d	file:
ZLIB_INTERNAL	zlib/gzguts.h	16;"	d
ZLIB_INTERNAL	zlib/gzguts.h	18;"	d
ZLIB_INTERNAL	zlib/uncompr.c	8;"	d	file:
ZLIB_INTERNAL	zlib/zutil.h	17;"	d
ZLIB_INTERNAL	zlib/zutil.h	19;"	d
ZLIB_VERNUM	zlib/zlib.h	41;"	d
ZLIB_VERSION	zlib/zlib.h	40;"	d
ZLIB_VER_MAJOR	zlib/zlib.h	42;"	d
ZLIB_VER_MINOR	zlib/zlib.h	43;"	d
ZLIB_VER_REVISION	zlib/zlib.h	44;"	d
ZLIB_VER_SUBREVISION	zlib/zlib.h	45;"	d
ZSWAP32	zlib/zutil.h	250;"	d
ZUTIL_H	zlib/zutil.h	14;"	d
Z_ARG	zlib/zconf.h	275;"	d
Z_ARG	zlib/zconf.h	277;"	d
Z_ASCII	zlib/zlib.h	201;"	d
Z_BEST_COMPRESSION	zlib/zlib.h	188;"	d
Z_BEST_SPEED	zlib/zlib.h	187;"	d
Z_BINARY	zlib/zlib.h	199;"	d
Z_BLOCK	zlib/zlib.h	169;"	d
Z_BUF_ERROR	zlib/zlib.h	180;"	d
Z_DATA_ERROR	zlib/zlib.h	178;"	d
Z_DEFAULT_COMPRESSION	zlib/zlib.h	189;"	d
Z_DEFAULT_STRATEGY	zlib/zlib.h	196;"	d
Z_DEFLATED	zlib/zlib.h	205;"	d
Z_ERRNO	zlib/zlib.h	176;"	d
Z_FILTERED	zlib/zlib.h	192;"	d
Z_FINISH	zlib/zlib.h	168;"	d
Z_FIXED	zlib/zlib.h	195;"	d
Z_FULL_FLUSH	zlib/zlib.h	167;"	d
Z_HAVE_STDARG_H	zlib/zconf.h	416;"	d
Z_HAVE_UNISTD_H	zlib/zconf.h	412;"	d
Z_HAVE_UNISTD_H	zlib/zconf.h	448;"	d
Z_HUFFMAN_ONLY	zlib/zlib.h	193;"	d
Z_LARGE64	zlib/zconf.h	467;"	d
Z_LFS64	zlib/zconf.h	463;"	d
Z_MEM_ERROR	zlib/zlib.h	179;"	d
Z_NEED_DICT	zlib/zlib.h	175;"	d
Z_NO_COMPRESSION	zlib/zlib.h	186;"	d
Z_NO_FLUSH	zlib/zlib.h	164;"	d
Z_NULL	zlib/zlib.h	208;"	d
Z_OK	zlib/zlib.h	173;"	d
Z_PARTIAL_FLUSH	zlib/zlib.h	165;"	d
Z_PREFIX_SET	zlib/zconf.h	18;"	d
Z_RLE	zlib/zlib.h	194;"	d
Z_STREAM_END	zlib/zlib.h	174;"	d
Z_STREAM_ERROR	zlib/zlib.h	177;"	d
Z_SYNC_FLUSH	zlib/zlib.h	166;"	d
Z_TEXT	zlib/zlib.h	200;"	d
Z_TREES	zlib/zlib.h	170;"	d
Z_U4	zlib/zconf.h	397;"	d
Z_U4	zlib/zconf.h	399;"	d
Z_U4	zlib/zconf.h	401;"	d
Z_UNKNOWN	zlib/zlib.h	202;"	d
Z_VERSION_ERROR	zlib/zlib.h	181;"	d
Z_WANT64	zlib/zconf.h	471;"	d
_CompressElement_H	sz/include/CompressElement.h	11;"	d
_DICTIONARY_H_	sz/include/dictionary.h	15;"	d
_DynamicByteArray_H	sz/include/DynamicByteArray.h	11;"	d
_DynamicDoubleArray_H	sz/include/DynamicDoubleArray.h	11;"	d
_DynamicFloatArray_H	sz/include/DynamicFloatArray.h	11;"	d
_DynamicIntArray_H	sz/include/DynamicIntArray.h	11;"	d
_FILE_OFFSET_BITS	zlib/gzguts.h	11;"	d
_Huffman_H	sz/include/Huffman.h	11;"	d
_INIPARSER_H_	sz/include/iniparser.h	11;"	d
_IO_H	sz/include/rw.h	11;"	d
_LARGEFILE64_SOURCE	zlib/zconf.h	444;"	d
_LARGEFILE_SOURCE	zlib/gzguts.h	8;"	d
_PTRDIFF_T_DEFINED	zlib/zutil.h	157;"	d
_SZ_H	sz/include/sz.h	11;"	d
_TightDataPointStorageD_H	sz/include/TightDataPointStorageD.h	11;"	d
_TightDataPointStorageF_H	sz/include/TightDataPointStorageF.h	11;"	d
_VarSet_H	sz/include/VarSet.h	11;"	d
_dictionary_	sz/include/dictionary.h	/^typedef struct _dictionary_ {$/;"	s
_dist_code	zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v
_dist_code	zlib/trees.h	/^const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {$/;"	v
_dist_code	zlib/zconf.h	21;"	d
_halloc	zlib/zutil.c	275;"	d	file:
_hfree	zlib/zutil.c	276;"	d	file:
_length_code	zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v
_length_code	zlib/trees.h	/^const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v
_length_code	zlib/zconf.h	22;"	d
_line_status_	sz/src/iniparser.c	/^typedef enum _line_status_ {$/;"	g	file:
_tr_align	zlib/trees.c	/^void ZLIB_INTERNAL _tr_align(s)$/;"	f
_tr_align	zlib/zconf.h	23;"	d
_tr_flush_bits	zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_bits(s)$/;"	f
_tr_flush_bits	zlib/zconf.h	24;"	d
_tr_flush_block	zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)$/;"	f
_tr_flush_block	zlib/zconf.h	25;"	d
_tr_init	zlib/trees.c	/^void ZLIB_INTERNAL _tr_init(s)$/;"	f
_tr_init	zlib/zconf.h	26;"	d
_tr_stored_block	zlib/trees.c	/^void ZLIB_INTERNAL _tr_stored_block(s, buf, stored_len, last)$/;"	f
_tr_stored_block	zlib/zconf.h	27;"	d
_tr_tally	zlib/trees.c	/^int ZLIB_INTERNAL _tr_tally (s, dist, lc)$/;"	f
_tr_tally	zlib/zconf.h	28;"	d
_tr_tally_dist	zlib/deflate.h	330;"	d
_tr_tally_dist	zlib/deflate.h	342;"	d
_tr_tally_lit	zlib/deflate.h	323;"	d
_tr_tally_lit	zlib/deflate.h	341;"	d
absErrBound	sz/include/VarSet.h	/^	double absErrBound;$/;"	m	struct:SZ_Variable
absErrBound	sz/include/sz.h	/^    double absErrBound;$/;"	m	struct:sz_params
absErrBound	sz/src/sz.c	/^double absErrBound;$/;"	v
abs_builddir	Makefile	/^abs_builddir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_builddir	example/Makefile	/^abs_builddir = \/home\/qliu\/DREvaluation\/SZ\/example$/;"	m
abs_builddir	sz/Makefile	/^abs_builddir = \/home\/qliu\/DREvaluation\/SZ\/sz$/;"	m
abs_builddir	zlib/Makefile	/^abs_builddir = \/home\/qliu\/DREvaluation\/SZ\/zlib$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_srcdir	example/Makefile	/^abs_srcdir = \/home\/qliu\/DREvaluation\/SZ\/example$/;"	m
abs_srcdir	sz/Makefile	/^abs_srcdir = \/home\/qliu\/DREvaluation\/SZ\/sz$/;"	m
abs_srcdir	zlib/Makefile	/^abs_srcdir = \/home\/qliu\/DREvaluation\/SZ\/zlib$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_builddir	example/Makefile	/^abs_top_builddir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_builddir	sz/Makefile	/^abs_top_builddir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_builddir	zlib/Makefile	/^abs_top_builddir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_srcdir	example/Makefile	/^abs_top_srcdir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_srcdir	sz/Makefile	/^abs_top_srcdir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
abs_top_srcdir	zlib/Makefile	/^abs_top_srcdir = \/home\/qliu\/DREvaluation\/SZ$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	example/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	sz/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	zlib/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	example/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	sz/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	zlib/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	example/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	sz/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	zlib/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_FC	Makefile	/^ac_ct_FC = gfortran$/;"	m
ac_ct_FC	example/Makefile	/^ac_ct_FC = gfortran$/;"	m
ac_ct_FC	sz/Makefile	/^ac_ct_FC = gfortran$/;"	m
ac_ct_FC	zlib/Makefile	/^ac_ct_FC = gfortran$/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_fc_try_compile	configure	/^ac_fn_fc_try_compile ()$/;"	f
ac_fn_fc_try_link	configure	/^ac_fn_fc_try_link ()$/;"	f
addDBA_Data	sz/src/DynamicByteArray.c	/^void addDBA_Data(DynamicByteArray *dba, unsigned char value)$/;"	f
addDDA_Data	sz/src/DynamicDoubleArray.c	/^void addDDA_Data(DynamicDoubleArray *dda, double value)$/;"	f
addDFA_Data	sz/src/DynamicFloatArray.c	/^void addDFA_Data(DynamicFloatArray *dfa, float value)$/;"	f
addDIA_Data	sz/src/DynamicIntArray.c	/^void addDIA_Data(DynamicIntArray *dia, int value)$/;"	f
addExactData	sz/src/dataCompression.c	/^void addExactData(DynamicByteArray *exactMidByteArray, DynamicIntArray *exactLeadNumArray, $/;"	f
adler	zlib/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	zlib/adler32.c	/^uLong ZEXPORT adler32(adler, buf, len)$/;"	f
adler32	zlib/zconf.h	29;"	d
adler32_combine	zlib/adler32.c	/^uLong ZEXPORT adler32_combine(adler1, adler2, len2)$/;"	f
adler32_combine	zlib/zconf.h	30;"	d
adler32_combine	zlib/zlib.h	1713;"	d
adler32_combine64	zlib/adler32.c	/^uLong ZEXPORT adler32_combine64(adler1, adler2, len2)$/;"	f
adler32_combine64	zlib/zconf.h	31;"	d
adler32_combine_	zlib/adler32.c	/^local uLong adler32_combine_(adler1, adler2, len2)$/;"	f
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
allNodes	sz/src/Huffman.c	/^int allNodes;$/;"	v
allSameData	sz/include/TightDataPointStorageD.h	/^	int allSameData;$/;"	m	struct:TightDataPointStorageD
allSameData	sz/include/TightDataPointStorageF.h	/^	int allSameData;$/;"	m	struct:TightDataPointStorageF
alloc_func	zlib/zconf.h	130;"	d
alloc_func	zlib/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	example/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	sz/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__aclocal_m4_deps	zlib/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__base_list	sz/Makefile	/^am__base_list = \\$/;"	m
am__base_list	zlib/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	example/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	sz/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	zlib/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	example/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	sz/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	zlib/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	example/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	sz/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	zlib/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	example/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	sz/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	zlib/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	example/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	sz/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	zlib/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	example/Makefile	/^am__include = include$/;"	m
am__include	sz/Makefile	/^am__include = include$/;"	m
am__include	zlib/Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	sz/Makefile	/^am__include_HEADERS_DIST = include\/CompressElement.h \\$/;"	m
am__install_max	sz/Makefile	/^am__install_max = 40$/;"	m
am__install_max	zlib/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	example/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	sz/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	zlib/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	example/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	sz/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	zlib/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	example/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	sz/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	zlib/Makefile	/^am__leading_dot = .$/;"	m
am__libsz_la_SOURCES_DIST	sz/Makefile	/^am__libsz_la_SOURCES_DIST = src\/ByteToolkit.c src\/dataCompression.c \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	example/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	sz/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	zlib/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	example/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	sz/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	zlib/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	example/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	sz/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	zlib/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	example/Makefile	/^am__mv = mv -f$/;"	m
am__mv	sz/Makefile	/^am__mv = mv -f$/;"	m
am__mv	zlib/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	sz/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	zlib/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	sz/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	zlib/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	sz/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	zlib/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	example/Makefile	/^am__quote = $/;"	m
am__quote	sz/Makefile	/^am__quote = $/;"	m
am__quote	zlib/Makefile	/^am__quote = $/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	sz/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	zlib/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	example/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	sz/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	zlib/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	example/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	sz/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	zlib/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__testdouble_batch_f_SOURCES_DIST	example/Makefile	/^am__testdouble_batch_f_SOURCES_DIST = testdouble_batch_f.f90$/;"	m
am__testdouble_compress_f_SOURCES_DIST	example/Makefile	/^am__testdouble_compress_f_SOURCES_DIST = testdouble_compress_f.f90$/;"	m
am__testdouble_decompress_f_SOURCES_DIST	example/Makefile	/^am__testdouble_decompress_f_SOURCES_DIST =  \\$/;"	m
am__uninstall_files_from_dir	sz/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	zlib/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	example/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	sz/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	zlib/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	example/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	sz/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	zlib/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	example/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	sz/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	zlib/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	example/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	sz/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	zlib/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	example/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	sz/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	zlib/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	example/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	sz/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	zlib/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	example/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	sz/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	zlib/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	example/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	sz/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	zlib/Makefile	/^am__v_CC_1 = $/;"	m
am__v_FCLD_	example/Makefile	/^am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_FCLD_	sz/Makefile	/^am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_FCLD_0	example/Makefile	/^am__v_FCLD_0 = @echo "  FCLD    " $@;$/;"	m
am__v_FCLD_0	sz/Makefile	/^am__v_FCLD_0 = @echo "  FCLD    " $@;$/;"	m
am__v_FCLD_1	example/Makefile	/^am__v_FCLD_1 = $/;"	m
am__v_FCLD_1	sz/Makefile	/^am__v_FCLD_1 = $/;"	m
am__v_FC_	example/Makefile	/^am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_FC_0	example/Makefile	/^am__v_FC_0 = @echo "  FC      " $@;$/;"	m
am__v_FC_1	example/Makefile	/^am__v_FC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	example/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	sz/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	zlib/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	example/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	sz/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	zlib/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	example/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	sz/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	zlib/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_PPFC_	sz/Makefile	/^am__v_PPFC_ = $(am__v_PPFC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_PPFC_0	sz/Makefile	/^am__v_PPFC_0 = @echo "  PPFC    " $@;$/;"	m
am__v_PPFC_1	sz/Makefile	/^am__v_PPFC_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	example/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	sz/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	zlib/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	example/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	sz/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	zlib/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	example/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	sz/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	zlib/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	example/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	sz/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	zlib/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	example/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	sz/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	zlib/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	example/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	sz/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	zlib/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	example/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	sz/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	zlib/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	example/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	sz/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	zlib/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	example/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	sz/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	zlib/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	sz/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	zlib/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	sz/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	zlib/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libsz_la_OBJECTS	sz/Makefile	/^am_libsz_la_OBJECTS = libsz_la-ByteToolkit.lo \\$/;"	m
am_libsz_la_rpath	sz/Makefile	/^am_libsz_la_rpath = -rpath $(libdir)$/;"	m
am_libzlib_la_OBJECTS	zlib/Makefile	/^am_libzlib_la_OBJECTS = libzlib_la-adler32.lo libzlib_la-crc32.lo \\$/;"	m
am_testdouble_batch_compress_OBJECTS	example/Makefile	/^am_testdouble_batch_compress_OBJECTS =  \\$/;"	m
am_testdouble_compress_OBJECTS	example/Makefile	/^am_testdouble_compress_OBJECTS = testdouble_compress.$(OBJEXT)$/;"	m
am_testdouble_decompress_OBJECTS	example/Makefile	/^am_testdouble_decompress_OBJECTS = testdouble_decompress.$(OBJEXT)$/;"	m
am_testfloat_batch_compress_OBJECTS	example/Makefile	/^am_testfloat_batch_compress_OBJECTS =  \\$/;"	m
am_testfloat_compress_OBJECTS	example/Makefile	/^am_testfloat_compress_OBJECTS = testfloat_compress.$(OBJEXT)$/;"	m
am_testfloat_decompress_OBJECTS	example/Makefile	/^am_testfloat_decompress_OBJECTS = testfloat_decompress.$(OBJEXT)$/;"	m
arg	example/testdouble_batch_f.f90	/^        character(len=32) :: arg$/;"	v	program:p
arg	example/testdouble_compress_f.f90	/^        character(len=32) :: arg$/;"	v	program:p
arg	example/testdouble_decompress_f.f90	/^        character(len=32) :: arg$/;"	v	program:p
array	sz/include/DynamicByteArray.h	/^	unsigned char* array;$/;"	m	struct:DynamicByteArray
array	sz/include/DynamicDoubleArray.h	/^	double* array;$/;"	m	struct:DynamicDoubleArray
array	sz/include/DynamicFloatArray.h	/^	float* array;$/;"	m	struct:DynamicFloatArray
array	sz/include/DynamicIntArray.h	/^	unsigned char* array; \/\/char* (one byte) is enough, don't have to be int*$/;"	m	struct:DynamicIntArray
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
avail_in	zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
back	zlib/inflate.h	/^    int back;                   \/* bits back of last unprocessed length\/lit *\/$/;"	m	struct:inflate_state
base_dist	zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v
base_dist	zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v
base_length	zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v
base_length	zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v
bi_buf	zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state
bi_flush	zlib/trees.c	/^local void bi_flush(s)$/;"	f
bi_reverse	zlib/trees.c	/^local unsigned bi_reverse(code, len)$/;"	f
bi_valid	zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state
bi_windup	zlib/trees.c	/^local void bi_windup(s)$/;"	f
bigEndian_to_OSEndian_double	sz/src/dataCompression.c	/^void bigEndian_to_OSEndian_double(unsigned char data[8])$/;"	f
bigEndian_to_OSEndian_float	sz/src/dataCompression.c	/^void bigEndian_to_OSEndian_float(unsigned char data[4])$/;"	f
bin_PROGRAMS	example/Makefile	/^bin_PROGRAMS = testfloat_compress$(EXEEXT) \\$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	example/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	sz/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	zlib/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bits	zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state
bits	zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon1
bits_sent	zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state
bl_count	zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state
bl_desc	zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
bl_order	zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v
bl_tree	zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
block_done	zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anon5	file:
block_start	zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state
block_state	zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anon5	file:
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	example/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	sz/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	zlib/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	example/Makefile	/^build_alias = $/;"	m
build_alias	sz/Makefile	/^build_alias = $/;"	m
build_alias	zlib/Makefile	/^build_alias = $/;"	m
build_bl_tree	zlib/trees.c	/^local int build_bl_tree(s)$/;"	f
build_code	sz/src/Huffman.c	/^void build_code(node n, int len, unsigned long out1, unsigned long out2)$/;"	f
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	example/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	sz/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	zlib/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	example/Makefile	/^build_os = linux-gnu$/;"	m
build_os	sz/Makefile	/^build_os = linux-gnu$/;"	m
build_os	zlib/Makefile	/^build_os = linux-gnu$/;"	m
build_tree	zlib/trees.c	/^local void build_tree(s, desc)$/;"	f
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	example/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	sz/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	zlib/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_vendor	example/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	sz/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	zlib/Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	example/Makefile	/^builddir = .$/;"	m
builddir	sz/Makefile	/^builddir = .$/;"	m
builddir	zlib/Makefile	/^builddir = .$/;"	m
byte	sz/include/sz.h	/^	unsigned char byte[2];$/;"	m	union:lshort
byte	sz/include/sz.h	/^    unsigned char byte[4];$/;"	m	union:lfloat
byte	sz/include/sz.h	/^    unsigned char byte[8];$/;"	m	union:ldouble
bytes	example/testdouble_decompress_f.f90	/^        integer(kind=1), dimension(:), allocatable :: bytes$/;"	v	program:p
bytesToDouble	sz/src/ByteToolkit.c	/^double bytesToDouble(unsigned char* bytes)$/;"	f
bytesToFloat	sz/src/ByteToolkit.c	/^float bytesToFloat(unsigned char* bytes)$/;"	f
bytesToInt	sz/src/ByteToolkit.c	/^int bytesToInt(unsigned char* bytes)$/;"	f
bytesToInt_bigEndian	sz/src/ByteToolkit.c	/^int bytesToInt_bigEndian(unsigned char* bytes)$/;"	f
bytesToLong	sz/src/ByteToolkit.c	/^long bytesToLong(unsigned char* bytes)$/;"	f
bytesToLong_bigEndian	sz/src/ByteToolkit.c	/^long bytesToLong_bigEndian(unsigned char* b) {$/;"	f
bytesToShort	sz/src/ByteToolkit.c	/^short bytesToShort(unsigned char* bytes)$/;"	f
c	sz/include/Huffman.h	/^	unsigned int c;$/;"	m	struct:node_t
capacity	sz/include/DynamicByteArray.h	/^	int capacity;$/;"	m	struct:DynamicByteArray
capacity	sz/include/DynamicDoubleArray.h	/^	int capacity;$/;"	m	struct:DynamicDoubleArray
capacity	sz/include/DynamicFloatArray.h	/^	int capacity;$/;"	m	struct:DynamicFloatArray
capacity	sz/include/DynamicIntArray.h	/^	int capacity;$/;"	m	struct:DynamicIntArray
charf	zlib/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	zlib/zconf.h	131;"	d
check	zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state
checkFileSize	sz/src/rw.c	/^int checkFileSize(char *srcFilePath, int *status)$/;"	f
checkFileSize	sz/src/rw_interface.F90	/^	SUBROUTINE checkFileSize(/;"	s	module:RW
checkVersion	sz/src/conf.c	/^int checkVersion(char* version)$/;"	f
check_match	zlib/deflate.c	/^local void check_match(s, start, match, length)$/;"	f
check_match	zlib/deflate.c	1377;"	d	file:
checkfilesizec_	sz/src/rwf.c	/^void checkfilesizec_(char *srcFilePath, int *len, int *filesize)$/;"	f
clearHuffmanMem	sz/src/conf.c	/^void clearHuffmanMem()$/;"	f
close	zlib/gzguts.h	42;"	d
code	sz/src/Huffman.c	/^unsigned long **code = NULL;\/\/TODO$/;"	v
code	zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anon6
code	zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon1
codes	zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state
codetype	zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon2
comm_max	zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comment	zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
compIdenticalLeadingBytesCount_double	sz/src/dataCompression.c	/^int compIdenticalLeadingBytesCount_double(unsigned char* preBytes, unsigned char* curBytes)$/;"	f
compIdenticalLeadingBytesCount_float	sz/src/dataCompression.c	/^int compIdenticalLeadingBytesCount_float(unsigned char* preBytes, unsigned char* curBytes)$/;"	f
compress	zlib/compress.c	/^int ZEXPORT compress (dest, destLen, source, sourceLen)$/;"	f
compress	zlib/zconf.h	33;"	d
compress2	zlib/compress.c	/^int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)$/;"	f
compress2	zlib/zconf.h	34;"	d
compressBound	zlib/compress.c	/^uLong ZEXPORT compressBound (sourceLen)$/;"	f
compressBound	zlib/zconf.h	35;"	d
compressSingleDoubleValue	sz/src/dataCompression.c	/^void compressSingleDoubleValue(DoubleValueCompressElement *vce, double tgtValue, double precision, double medianValue, $/;"	f
compressSingleFloatValue	sz/src/dataCompression.c	/^void compressSingleFloatValue(FloatValueCompressElement *vce, float tgtValue, float precision, float medianValue, $/;"	f
compressType	sz/include/VarSet.h	/^	char compressType; \/\/102 means HZ; 101 means SZ $/;"	m	struct:SZ_Variable
compress_block	zlib/trees.c	/^local void compress_block(s, ltree, dtree)$/;"	f
compress_func	zlib/deflate.c	/^typedef block_state (*compress_func) OF((deflate_state *s, int flush));$/;"	t	file:
compressedBytes	sz/include/VarSet.h	/^	unsigned char* compressedBytes;$/;"	m	struct:SZ_Variable
compressedSize	sz/include/VarSet.h	/^	int compressedSize;$/;"	m	struct:SZ_Variable
compressed_len	zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state
computeBitNumRequired	sz/src/TypeManager.c	/^int computeBitNumRequired(int dataLength)$/;"	f
computeBlockEdgeSize_2D	sz/src/sz_float_pwr.c	/^int computeBlockEdgeSize_2D(int segmentSize)$/;"	f
computeBlockEdgeSize_3D	sz/src/sz_float_pwr.c	/^int computeBlockEdgeSize_3D(int segmentSize)$/;"	f
computeDataLength	sz/src/sz.c	/^int computeDataLength(int r5, int r4, int r3, int r2, int r1)$/;"	f
computeDimension	sz/src/sz.c	/^int computeDimension(int r5, int r4, int r3, int r2, int r1)$/;"	f
computeRangeSize_double	sz/src/dataCompression.c	/^double computeRangeSize_double(double* oriData, int size, double* valueRangeSize, double* medianValue)$/;"	f
computeRangeSize_float	sz/src/dataCompression.c	/^float computeRangeSize_float(float* oriData, int size, float* valueRangeSize, float* medianValue)$/;"	f
computeReqLength_double	sz/src/sz_double.c	/^void computeReqLength_double(double realPrecision, short radExpo, int* reqLength, double* medianValue)$/;"	f
computeReqLength_float	sz/src/sz_float.c	/^void computeReqLength_float(float realPrecision, short radExpo, int* reqLength, float* medianValue)$/;"	f
compute_segment_precisions_double_1D	sz/src/sz_double_pwr.c	/^void compute_segment_precisions_double_1D(double *oriData, int dataLength, double* pwrErrBound, unsigned char* pwrErrBoundBytes)$/;"	f
compute_segment_precisions_double_2D	sz/src/sz_double_pwr.c	/^void compute_segment_precisions_double_2D(double *oriData, double* pwrErrBound, $/;"	f
compute_segment_precisions_double_3D	sz/src/sz_double_pwr.c	/^void compute_segment_precisions_double_3D(double *oriData, double* pwrErrBound, $/;"	f
compute_segment_precisions_float_1D	sz/src/sz_float_pwr.c	/^void compute_segment_precisions_float_1D(float *oriData, int dataLength, float* pwrErrBound, unsigned char* pwrErrBoundBytes)$/;"	f
compute_segment_precisions_float_2D	sz/src/sz_float_pwr.c	/^void compute_segment_precisions_float_2D(float *oriData, float* pwrErrBound, $/;"	f
compute_segment_precisions_float_3D	sz/src/sz_float_pwr.c	/^void compute_segment_precisions_float_3D(float *oriData, float* pwrErrBound, $/;"	f
compute_total_batch_size	sz/src/sz.c	/^int compute_total_batch_size()$/;"	f
compute_total_batch_size_c_	sz/src/szf.c	/^void compute_total_batch_size_c_(int *totalSize)$/;"	f
conf_params	sz/src/sz.c	/^sz_params *conf_params = NULL;$/;"	v
config	zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
config_s	zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
configuration_table	zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v
configuration_table	zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v
const	zlib/zconf.h	217;"	d
convertByteArray2IntArray_fast_2b	sz/src/TypeManager.c	/^void convertByteArray2IntArray_fast_2b(int stepLength, unsigned char* byteArray, int byteArrayLength, unsigned char **intArray)$/;"	f
convertByteArray2IntArray_fast_3b	sz/src/TypeManager.c	/^void convertByteArray2IntArray_fast_3b(int stepLength, unsigned char* byteArray, int byteArrayLength, unsigned char **intArray)$/;"	f
convertByteDataToShortArray	sz/src/ByteToolkit.c	/^unsigned short* convertByteDataToShortArray(unsigned char* bytes, int byteLength)$/;"	f
convertDBAtoBytes	sz/src/DynamicByteArray.c	/^void convertDBAtoBytes(DynamicByteArray *dba, unsigned char** bytes)$/;"	f
convertDDAtoDoubles	sz/src/DynamicDoubleArray.c	/^void convertDDAtoDoubles(DynamicDoubleArray *dba, double **data)$/;"	f
convertDFAtoFloats	sz/src/DynamicFloatArray.c	/^void convertDFAtoFloats(DynamicFloatArray *dfa, float **data)$/;"	f
convertDIAtoInts	sz/src/DynamicIntArray.c	/^void convertDIAtoInts(DynamicIntArray *dia, unsigned char **data)$/;"	f
convertIntArray2ByteArray_fast_2b	sz/src/TypeManager.c	/^int convertIntArray2ByteArray_fast_2b(unsigned char* timeStepType, int timeStepTypeLength, unsigned char **result)$/;"	f
convertIntArray2ByteArray_fast_3b	sz/src/TypeManager.c	/^int convertIntArray2ByteArray_fast_3b(unsigned char* timeStepType, int timeStepTypeLength, unsigned char **result)$/;"	f
convertIntArray2ByteArray_fast_dynamic	sz/src/TypeManager.c	/^int convertIntArray2ByteArray_fast_dynamic(unsigned char* timeStepType, unsigned char* resiBitLength, int resiBitLengthLength, unsigned char **bytes)$/;"	f
convertShortArrayToBytes	sz/src/ByteToolkit.c	/^void convertShortArrayToBytes(unsigned short* states, int stateLength, unsigned char* bytes)$/;"	f
convertTDPStoBytes_double	sz/src/TightDataPointStorageD.c	/^void convertTDPStoBytes_double(TightDataPointStorageD* tdps, unsigned char* bytes, unsigned char* dsLengthBytes, unsigned char sameByte)$/;"	f
convertTDPStoBytes_double_reserve	sz/src/TightDataPointStorageD.c	/^void convertTDPStoBytes_double_reserve(TightDataPointStorageD* tdps, unsigned char* bytes, unsigned char* dsLengthBytes, unsigned char sameByte)$/;"	f
convertTDPStoBytes_float	sz/src/TightDataPointStorageF.c	/^void convertTDPStoBytes_float(TightDataPointStorageF* tdps, unsigned char* bytes, unsigned char* dsLengthBytes, unsigned char sameByte)$/;"	f
convertTDPStoBytes_float_reserve	sz/src/TightDataPointStorageF.c	/^void convertTDPStoBytes_float_reserve(TightDataPointStorageF* tdps, unsigned char* bytes, unsigned char* dsLengthBytes, unsigned char sameByte)$/;"	f
convertTDPStoFlatBytes_double	sz/src/TightDataPointStorageD.c	/^void convertTDPStoFlatBytes_double(TightDataPointStorageD *tdps, unsigned char** bytes, int *size) $/;"	f
convertTDPStoFlatBytes_double_args	sz/src/TightDataPointStorageD.c	/^void convertTDPStoFlatBytes_double_args(TightDataPointStorageD *tdps, unsigned char* bytes, int *size) $/;"	f
convertTDPStoFlatBytes_float	sz/src/TightDataPointStorageF.c	/^void convertTDPStoFlatBytes_float(TightDataPointStorageF *tdps, unsigned char** bytes, int *size)$/;"	f
convertTDPStoFlatBytes_float_args	sz/src/TightDataPointStorageF.c	/^void convertTDPStoFlatBytes_float_args(TightDataPointStorageF *tdps, unsigned char* bytes, int *size)$/;"	f
convert_HuffTree_to_bytes_anyStates	sz/src/Huffman.c	/^unsigned int convert_HuffTree_to_bytes_anyStates(int nodeCount, unsigned char** out) $/;"	f
copy_block	zlib/trees.c	/^local void copy_block(s, buf, len, header)$/;"	f
costStart	example/testdouble_batch_compress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
costStart	example/testdouble_compress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
costStart	example/testdouble_decompress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
costStart	example/testfloat_batch_compress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
costStart	example/testfloat_compress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
costStart	example/testfloat_decompress.c	/^struct timeval costStart; \/*only used for recording the cost*\/$/;"	v	typeref:struct:timeval
cost_end	example/testdouble_batch_compress.c	/^void cost_end()$/;"	f
cost_end	example/testdouble_compress.c	/^void cost_end()$/;"	f
cost_end	example/testdouble_decompress.c	/^void cost_end()$/;"	f
cost_end	example/testfloat_batch_compress.c	/^void cost_end()$/;"	f
cost_end	example/testfloat_compress.c	/^void cost_end()$/;"	f
cost_end	example/testfloat_decompress.c	/^void cost_end()$/;"	f
cost_start	example/testdouble_batch_compress.c	/^void cost_start()$/;"	f
cost_start	example/testdouble_compress.c	/^void cost_start()$/;"	f
cost_start	example/testdouble_decompress.c	/^void cost_start()$/;"	f
cost_start	example/testfloat_batch_compress.c	/^void cost_start()$/;"	f
cost_start	example/testfloat_compress.c	/^void cost_start()$/;"	f
cost_start	example/testfloat_decompress.c	/^void cost_start()$/;"	f
count	sz/include/VarSet.h	/^	int count;$/;"	m	struct:SZ_VarSet
cout	sz/src/Huffman.c	/^unsigned char *cout = NULL;$/;"	v
crc32	zlib/crc32.c	/^unsigned long ZEXPORT crc32(crc, buf, len)$/;"	f
crc32	zlib/zconf.h	37;"	d
crc32_big	zlib/crc32.c	/^local unsigned long crc32_big(crc, buf, len)$/;"	f
crc32_combine	zlib/crc32.c	/^uLong ZEXPORT crc32_combine(crc1, crc2, len2)$/;"	f
crc32_combine	zlib/zconf.h	38;"	d
crc32_combine	zlib/zlib.h	1714;"	d
crc32_combine64	zlib/crc32.c	/^uLong ZEXPORT crc32_combine64(crc1, crc2, len2)$/;"	f
crc32_combine64	zlib/zconf.h	39;"	d
crc32_combine_	zlib/crc32.c	/^local uLong crc32_combine_(crc1, crc2, len2)$/;"	f
crc32_little	zlib/crc32.c	/^local unsigned long crc32_little(crc, buf, len)$/;"	f
crc_table	zlib/crc32.c	/^local z_crc_t FAR crc_table[TBLS][256];$/;"	v
crc_table	zlib/crc32.h	/^local const z_crc_t FAR crc_table[TBLS][256] =$/;"	v
crc_table_empty	zlib/crc32.c	/^local volatile int crc_table_empty = 1;$/;"	v
create2DArray_double	sz/src/rw.c	/^double** create2DArray_double(int m, int n)$/;"	f
create2DArray_float	sz/src/rw.c	/^float** create2DArray_float(int m, int n)$/;"	f
create3DArray_double	sz/src/rw.c	/^double*** create3DArray_double(int p, int m, int n)$/;"	f
create3DArray_float	sz/src/rw.c	/^float*** create3DArray_float(int p, int m, int n)$/;"	f
ct_data	zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s
ct_data_s	zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
curBytes	sz/include/CompressElement.h	/^	unsigned char curBytes[4]; \/\/big_endian$/;"	m	struct:FloatValueCompressElement
curBytes	sz/include/CompressElement.h	/^	unsigned char curBytes[8]; \/\/big_endian$/;"	m	struct:DoubleValueCompressElement
curValue	sz/include/CompressElement.h	/^	int curValue;$/;"	m	struct:FloatValueCompressElement
curValue	sz/include/CompressElement.h	/^	long curValue;$/;"	m	struct:DoubleValueCompressElement
d_buf	zlib/deflate.h	/^    ushf *d_buf;$/;"	m	struct:internal_state
d_code	zlib/deflate.h	305;"	d
d_desc	zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
dad	zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anon7
data	sz/include/CompressElement.h	/^	double data;$/;"	m	struct:DoubleValueCompressElement
data	sz/include/CompressElement.h	/^	float data;$/;"	m	struct:FloatValueCompressElement
data	sz/include/VarSet.h	/^	void* data;$/;"	m	struct:SZ_Variable
dataEndianType	sz/include/sz.h	/^    int dataEndianType;$/;"	m	struct:sz_params
dataEndianType	sz/src/sz.c	/^int dataEndianType; \/\/endian type of the data$/;"	v
dataSeriesLength	sz/include/TightDataPointStorageD.h	/^	int dataSeriesLength;$/;"	m	struct:TightDataPointStorageD
dataSeriesLength	sz/include/TightDataPointStorageF.h	/^	int dataSeriesLength;$/;"	m	struct:TightDataPointStorageF
dataType	sz/include/VarSet.h	/^	int dataType; \/\/SZ_FLOAT or SZ_DOUBLE$/;"	m	struct:SZ_Variable
data_type	zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	example/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	sz/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	zlib/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	example/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	sz/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	zlib/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
decode	sz/src/Huffman.c	/^void decode(unsigned char *s, int targetLength, node t, int *out)$/;"	f
decode_withTree	sz/src/Huffman.c	/^void decode_withTree(unsigned char *s, int targetLength, int *out)$/;"	f
decompressBitArraybySimpleLZ77	sz/src/TypeManager.c	/^void decompressBitArraybySimpleLZ77(int** result, unsigned char* bytes, int bytesLength, int totalLength, int validLength)$/;"	f
decompressDataSeries_double_1D	sz/src/TightDataPointStorageD.c	/^void decompressDataSeries_double_1D(double** data, int dataSeriesLength, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_double_1D_pwr	sz/src/TightDataPointStorageD_pwr.c	/^void decompressDataSeries_double_1D_pwr(double** data, int dataSeriesLength, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_double_2D	sz/src/TightDataPointStorageD.c	/^void decompressDataSeries_double_2D(double** data, int r1, int r2, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_double_2D_pwr	sz/src/TightDataPointStorageD_pwr.c	/^void decompressDataSeries_double_2D_pwr(double** data, int r1, int r2, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_double_3D	sz/src/TightDataPointStorageD.c	/^void decompressDataSeries_double_3D(double** data, int r1, int r2, int r3, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_double_3D_pwr	sz/src/TightDataPointStorageD_pwr.c	/^void decompressDataSeries_double_3D_pwr(double** data, int r1, int r2, int r3, TightDataPointStorageD* tdps) $/;"	f
decompressDataSeries_float_1D	sz/src/TightDataPointStorageF.c	/^void decompressDataSeries_float_1D(float** data, int dataSeriesLength, TightDataPointStorageF* tdps) $/;"	f
decompressDataSeries_float_1D_pwr	sz/src/TightDataPointStorageF_pwr.c	/^void decompressDataSeries_float_1D_pwr(float** data, int dataSeriesLength, TightDataPointStorageF* tdps) $/;"	f
decompressDataSeries_float_2D	sz/src/TightDataPointStorageF.c	/^void decompressDataSeries_float_2D(float** data, int r1, int r2, TightDataPointStorageF* tdps) {$/;"	f
decompressDataSeries_float_2D_pwr	sz/src/TightDataPointStorageF_pwr.c	/^void decompressDataSeries_float_2D_pwr(float** data, int r1, int r2, TightDataPointStorageF* tdps) $/;"	f
decompressDataSeries_float_3D	sz/src/TightDataPointStorageF.c	/^void decompressDataSeries_float_3D(float** data, int r1, int r2, int r3, TightDataPointStorageF* tdps) $/;"	f
decompressDataSeries_float_3D_pwr	sz/src/TightDataPointStorageF_pwr.c	/^void decompressDataSeries_float_3D_pwr(float** data, int r1, int r2, int r3, TightDataPointStorageF* tdps) $/;"	f
deflate	zlib/deflate.c	/^int ZEXPORT deflate (strm, flush)$/;"	f
deflate	zlib/zconf.h	40;"	d
deflateBound	zlib/deflate.c	/^uLong ZEXPORT deflateBound(strm, sourceLen)$/;"	f
deflateBound	zlib/zconf.h	41;"	d
deflateCopy	zlib/deflate.c	/^int ZEXPORT deflateCopy (dest, source)$/;"	f
deflateCopy	zlib/zconf.h	42;"	d
deflateEnd	zlib/deflate.c	/^int ZEXPORT deflateEnd (strm)$/;"	f
deflateEnd	zlib/zconf.h	43;"	d
deflateInit	zlib/zlib.h	1647;"	d
deflateInit2	zlib/zlib.h	1651;"	d
deflateInit2_	zlib/deflate.c	/^int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,$/;"	f
deflateInit2_	zlib/zconf.h	44;"	d
deflateInit_	zlib/deflate.c	/^int ZEXPORT deflateInit_(strm, level, version, stream_size)$/;"	f
deflateInit_	zlib/zconf.h	45;"	d
deflateParams	zlib/deflate.c	/^int ZEXPORT deflateParams(strm, level, strategy)$/;"	f
deflateParams	zlib/zconf.h	46;"	d
deflatePending	zlib/deflate.c	/^int ZEXPORT deflatePending (strm, pending, bits)$/;"	f
deflatePending	zlib/zconf.h	47;"	d
deflatePrime	zlib/deflate.c	/^int ZEXPORT deflatePrime (strm, bits, value)$/;"	f
deflatePrime	zlib/zconf.h	48;"	d
deflateReset	zlib/deflate.c	/^int ZEXPORT deflateReset (strm)$/;"	f
deflateReset	zlib/zconf.h	49;"	d
deflateResetKeep	zlib/deflate.c	/^int ZEXPORT deflateResetKeep (strm)$/;"	f
deflateResetKeep	zlib/zconf.h	50;"	d
deflateSetDictionary	zlib/deflate.c	/^int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)$/;"	f
deflateSetDictionary	zlib/zconf.h	51;"	d
deflateSetHeader	zlib/deflate.c	/^int ZEXPORT deflateSetHeader (strm, head)$/;"	f
deflateSetHeader	zlib/zconf.h	52;"	d
deflateTune	zlib/deflate.c	/^int ZEXPORT deflateTune(strm, good_length, max_lazy, nice_length, max_chain)$/;"	f
deflateTune	zlib/zconf.h	53;"	d
deflate_copyright	zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v
deflate_copyright	zlib/zconf.h	54;"	d
deflate_fast	zlib/deflate.c	/^local block_state deflate_fast(s, flush)$/;"	f
deflate_huff	zlib/deflate.c	/^local block_state deflate_huff(s, flush)$/;"	f
deflate_rle	zlib/deflate.c	/^local block_state deflate_rle(s, flush)$/;"	f
deflate_slow	zlib/deflate.c	/^local block_state deflate_slow(s, flush)$/;"	f
deflate_state	zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state
deflate_stored	zlib/deflate.c	/^local block_state deflate_stored(s, flush)$/;"	f
depcomp	example/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	sz/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	zlib/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depth	zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state
detect_data_type	zlib/trees.c	/^local int detect_data_type(s)$/;"	f
dictionary	sz/include/dictionary.h	/^} dictionary ;$/;"	t	typeref:struct:_dictionary_
dictionary_del	sz/src/dictionary.c	/^void dictionary_del(dictionary * d)$/;"	f
dictionary_dump	sz/src/dictionary.c	/^void dictionary_dump(dictionary * d, FILE * out)$/;"	f
dictionary_get	sz/src/dictionary.c	/^char * dictionary_get(dictionary * d, const char * key, char * def)$/;"	f
dictionary_hash	sz/src/dictionary.c	/^unsigned dictionary_hash(const char * key)$/;"	f
dictionary_new	sz/src/dictionary.c	/^dictionary * dictionary_new(int size)$/;"	f
dictionary_set	sz/src/dictionary.c	/^int dictionary_set(dictionary * d, const char * key, const char * val)$/;"	f
dictionary_unset	sz/src/dictionary.c	/^void dictionary_unset(dictionary * d, const char * key)$/;"	f
dim_	example/testdouble_batch_f.f90	/^        integer(kind=4) :: dim_$/;"	v	program:p
direct	zlib/gzguts.h	/^    int direct;             \/* 0 if processing gzip, 1 if transparent *\/$/;"	m	struct:__anon4
distbits	zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcode	zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distfix	zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dl	zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon7
dmax	zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	example/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	sz/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	zlib/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
done	zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
doubleToBytes	sz/src/ByteToolkit.c	/^void doubleToBytes(unsigned char *b, double num)$/;"	f
doubleToOSEndianLong	sz/src/ByteToolkit.c	/^long doubleToOSEndianLong(double value)$/;"	f
dummy	zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:static_tree_desc_s	file:
dummy	zlib/zlib.h	/^    struct internal_state {int dummy;};$/;"	m	struct:internal_state
dummy	zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:internal_state	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	example/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	sz/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	zlib/Makefile	/^dvidir = ${docdir}$/;"	m
dyn_dtree	zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_ltree	zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::ct_data_s
dyn_tree	zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s
elems	zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	file:
encode	sz/src/Huffman.c	/^void encode(int *s, int length, unsigned char *out, int *outSize)$/;"	f
encode_withTree	sz/src/Huffman.c	/^void encode_withTree(int *s, int length, unsigned char **out, int *outSize)$/;"	f
endTime	example/testdouble_batch_compress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
endTime	example/testdouble_compress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
endTime	example/testdouble_decompress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
endTime	example/testfloat_batch_compress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
endTime	example/testfloat_compress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
endTime	example/testfloat_decompress.c	/^struct timeval endTime;  \/* Start and end times *\/$/;"	v	typeref:struct:timeval
eof	zlib/gzguts.h	/^    int eof;                \/* true if end of input file reached *\/$/;"	m	struct:__anon4
err	zlib/gzguts.h	/^    int err;                \/* error code *\/$/;"	m	struct:__anon4
errBoundMode	sz/include/VarSet.h	/^	int errBoundMode;$/;"	m	struct:SZ_Variable
errno	zlib/zutil.c	/^    int errno = 0;$/;"	v
errorBoundMode	sz/include/sz.h	/^    int  errorBoundMode;$/;"	m	struct:sz_params
errorBoundMode	sz/src/sz.c	/^int errorBoundMode; \/\/ABS, REL, ABS_AND_REL, or ABS_OR_REL, or PW_REL$/;"	v
exactDataNum	sz/include/TightDataPointStorageD.h	/^	int exactDataNum;$/;"	m	struct:TightDataPointStorageD
exactDataNum	sz/include/TightDataPointStorageF.h	/^	int exactDataNum;$/;"	m	struct:TightDataPointStorageF
exactMidBytes	sz/include/TightDataPointStorageD.h	/^	unsigned char* exactMidBytes;$/;"	m	struct:TightDataPointStorageD
exactMidBytes	sz/include/TightDataPointStorageF.h	/^	unsigned char* exactMidBytes;$/;"	m	struct:TightDataPointStorageF
exactMidBytes_size	sz/include/TightDataPointStorageD.h	/^	int exactMidBytes_size;$/;"	m	struct:TightDataPointStorageD
exactMidBytes_size	sz/include/TightDataPointStorageF.h	/^	int exactMidBytes_size;$/;"	m	struct:TightDataPointStorageF
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	example/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	sz/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	zlib/Makefile	/^exec_prefix = ${prefix}$/;"	m
extra	zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state
extra	zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_base	zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	file:
extra_bits	zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
extra_blbits	zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v
extra_dbits	zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v
extra_lbits	zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v
extra_len	zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
extractBytes	sz/src/ByteToolkit.c	/^int extractBytes(unsigned char* byteArray, int k, int validLength)$/;"	f
extractRealPrecision_2D_double	sz/src/TightDataPointStorageD_pwr.c	/^double* extractRealPrecision_2D_double(int R1, int R2, int blockSize, TightDataPointStorageD* tdps)$/;"	f
extractRealPrecision_2D_float	sz/src/TightDataPointStorageF_pwr.c	/^float* extractRealPrecision_2D_float(int R1, int R2, int blockSize, TightDataPointStorageF* tdps)$/;"	f
extractRealPrecision_3D_double	sz/src/TightDataPointStorageD_pwr.c	/^double* extractRealPrecision_3D_double(int R1, int R2, int R3, int blockSize, TightDataPointStorageD* tdps)$/;"	f
extractRealPrecision_3D_float	sz/src/TightDataPointStorageF_pwr.c	/^float* extractRealPrecision_3D_float(int R1, int R2, int R3, int blockSize, TightDataPointStorageF* tdps)$/;"	f
fabs	sz/src/conf.c	/^double fabs(double value)$/;"	f
fc	zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon6
fd	zlib/gzguts.h	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anon4
fdopen	zlib/zutil.h	128;"	d
fdopen	zlib/zutil.h	149;"	d
fdopen	zlib/zutil.h	154;"	d
fdopen	zlib/zutil.h	160;"	d
fill_window	zlib/deflate.c	/^local void fill_window(s)$/;"	f
filloutDimArray	sz/src/sz.c	/^void filloutDimArray(int* dim, int r5, int r4, int r3, int r2, int r1)$/;"	f
finish_done	zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anon5	file:
finish_started	zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anon5	file:
fixedtables	zlib/infback.c	/^local void fixedtables(state)$/;"	f
fixedtables	zlib/inflate.c	/^local void fixedtables(state)$/;"	f
flags	zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags (0 if zlib) *\/$/;"	m	struct:inflate_state
floatToBytes	sz/src/ByteToolkit.c	/^void floatToBytes(unsigned char *b, float num)$/;"	f
floatToOSEndianInt	sz/src/ByteToolkit.c	/^int floatToOSEndianInt(float value)$/;"	f
flush_pending	zlib/deflate.c	/^local void flush_pending(strm)$/;"	f
flush_to_bigEndian_4bytes	sz/src/dataCompression.c	/^void flush_to_bigEndian_4bytes(unsigned char data[4])$/;"	f
flush_to_bigEndian_8bytes	sz/src/dataCompression.c	/^void flush_to_bigEndian_8bytes(unsigned char data[8], int dataEndianType)$/;"	f
free2DArray_double	sz/src/rw.c	/^void free2DArray_double(double** data, int m)$/;"	f
free2DArray_float	sz/src/rw.c	/^void free2DArray_float(float** data, int m)$/;"	f
free3DArray_double	sz/src/rw.c	/^void free3DArray_double(double*** data, int p, int m)$/;"	f
free3DArray_float	sz/src/rw.c	/^void free3DArray_float(float*** data, int p, int m)$/;"	f
free_DBA	sz/src/DynamicByteArray.c	/^void free_DBA(DynamicByteArray *dba)$/;"	f
free_DDA	sz/src/DynamicDoubleArray.c	/^void free_DDA(DynamicDoubleArray *dda)$/;"	f
free_DFA	sz/src/DynamicFloatArray.c	/^void free_DFA(DynamicFloatArray *dfa)$/;"	f
free_DIA	sz/src/DynamicIntArray.c	/^void free_DIA(DynamicIntArray *dia)$/;"	f
free_TightDataPointStorageD	sz/src/TightDataPointStorageD.c	/^void free_TightDataPointStorageD(TightDataPointStorageD *tdps)$/;"	f
free_TightDataPointStorageF	sz/src/TightDataPointStorageF.c	/^void free_TightDataPointStorageF(TightDataPointStorageF *tdps)$/;"	f
free_VarSet_vset	sz/src/VarSet.c	/^void free_VarSet_vset(SZ_VarSet *vset, int mode)$/;"	f
free_Variable_all	sz/src/VarSet.c	/^void free_Variable_all(SZ_Variable* v)$/;"	f
free_Variable_keepCompressedBytes	sz/src/VarSet.c	/^void free_Variable_keepCompressedBytes(SZ_Variable* v)$/;"	f
free_Variable_keepOriginalData	sz/src/VarSet.c	/^void free_Variable_keepOriginalData(SZ_Variable* v)$/;"	f
free_func	zlib/zconf.h	132;"	d
free_func	zlib/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
freq	sz/include/Huffman.h	/^	int freq;$/;"	m	struct:node_t
freq	zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anon6
func	zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	file:
func_append	config.status	/^func_append ()\\$/;"	f
func_append	configure	/^func_append ()\\$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_append	ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	config.status	/^func_append_quoted ()\\$/;"	f
func_append_quoted	configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	libtool	/^func_append_quoted ()$/;"	f
func_append_quoted	ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	config.status	/^func_arith ()\\$/;"	f
func_arith	configure	/^func_arith ()\\$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_arith	ltmain.sh	/^func_arith ()$/;"	f
func_at_file	ar-lib	/^func_at_file ()$/;"	f
func_basename	config.status	/^func_basename ()\\$/;"	f
func_basename	configure	/^func_basename ()\\$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_basename	ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	config.status	/^func_dirname ()\\$/;"	f
func_dirname	configure	/^func_dirname ()\\$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname	ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	ar-lib	/^func_error ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_file_conv	ar-lib	/^func_file_conv ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()\\$/;"	f
func_len	configure	/^func_len ()\\$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_len	ltmain.sh	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()\\$/;"	f
func_lo2o	configure	/^func_lo2o ()\\$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_lo2o	ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	config.status	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	libtool	/^func_split_long_opt ()$/;"	f
func_split_long_opt	ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	config.status	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	libtool	/^func_split_short_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	config.status	/^func_stripname ()\\$/;"	f
func_stripname	configure	/^func_stripname ()\\$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_stripname	ltmain.sh	/^func_stripname ()$/;"	f
func_stripname_cnf	configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()\\$/;"	f
func_xform	configure	/^func_xform ()\\$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
func_xform	ltmain.sh	/^func_xform ()$/;"	f
g1	example/testdouble_batch_f.f90	/^        integer(kind=4) :: g1,/;"	v	program:p
g2	example/testdouble_batch_f.f90	/^        integer(kind=4) :: g1, g2,/;"	v	program:p
g3	example/testdouble_batch_f.f90	/^        integer(kind=4) :: g1, g2, g3,/;"	v	program:p
g4	example/testdouble_batch_f.f90	/^        integer(kind=4) :: g1, g2, g3, g4,/;"	v	program:p
g5	example/testdouble_batch_f.f90	/^        integer(kind=4) :: g1, g2, g3, g4, g5$/;"	v	program:p
gen_bitlen	zlib/trees.c	/^local void gen_bitlen(s, desc)$/;"	f
gen_codes	zlib/trees.c	/^local void gen_codes (tree, max_code, bl_count)$/;"	f
gen_trees_header	zlib/trees.c	/^void gen_trees_header()$/;"	f
getDBA_Data	sz/src/DynamicByteArray.c	/^int getDBA_Data(DynamicByteArray *dba, int pos)$/;"	f
getDDA_Data	sz/src/DynamicDoubleArray.c	/^double getDDA_Data(DynamicDoubleArray *dda, int pos)$/;"	f
getDFA_Data	sz/src/DynamicFloatArray.c	/^float getDFA_Data(DynamicFloatArray *dfa, int pos)$/;"	f
getDIA_Data	sz/src/DynamicIntArray.c	/^int getDIA_Data(DynamicIntArray *dia, int pos)$/;"	f
getExponent_double	sz/src/ByteToolkit.c	/^short getExponent_double(double value)$/;"	f
getExponent_float	sz/src/ByteToolkit.c	/^short getExponent_float(float value)$/;"	f
getLeadingNumbers_Int	sz/src/ByteToolkit.c	/^unsigned char getLeadingNumbers_Int(int v1, int v2)$/;"	f
getLeadingNumbers_Long	sz/src/ByteToolkit.c	/^unsigned char getLeadingNumbers_Long(long v1, long v2)$/;"	f
getLeftMovingCode	sz/src/ByteToolkit.c	/^int getLeftMovingCode(int kMod8)$/;"	f
getLeftMovingSteps	sz/src/TypeManager.c	/^int getLeftMovingSteps(int k, unsigned char resiBitLength)$/;"	f
getMaskRightCode	sz/src/ByteToolkit.c	/^int getMaskRightCode(int m) {$/;"	f
getPrecisionReqLength_double	sz/src/ByteToolkit.c	/^short getPrecisionReqLength_double(double precision)$/;"	f
getPrecisionReqLength_float	sz/src/ByteToolkit.c	/^short getPrecisionReqLength_float(float precision)$/;"	f
getPredictionCoefficients	sz/src/sz.c	/^int getPredictionCoefficients(int layers, int dimension, int **coeff_array, int *status)$/;"	f
getRealPrecision_double	sz/src/dataCompression.c	/^double getRealPrecision_double(double valueRangeSize, int errBoundMode, double absErrBound, double relBoundRatio, int *status)$/;"	f
getRealPrecision_float	sz/src/dataCompression.c	/^double getRealPrecision_float(float valueRangeSize, int errBoundMode, double absErrBound, double relBoundRatio, int *status)$/;"	f
getRightMovingCode	sz/src/ByteToolkit.c	/^int getRightMovingCode(int kMod8, int resiBitLength)$/;"	f
getRightMovingSteps	sz/src/ByteToolkit.c	/^int getRightMovingSteps(int kMod8, int resiBitLength) {$/;"	f
getSnapshotData_double_1D	sz/src/TightDataPointStorageD.c	/^void getSnapshotData_double_1D(double** data, int dataSeriesLength, TightDataPointStorageD* tdps, int errBoundMode) $/;"	f
getSnapshotData_double_2D	sz/src/TightDataPointStorageD.c	/^void getSnapshotData_double_2D(double** data, int r1, int r2, TightDataPointStorageD* tdps, int errBoundMode) $/;"	f
getSnapshotData_double_3D	sz/src/TightDataPointStorageD.c	/^void getSnapshotData_double_3D(double** data, int r1, int r2, int r3, TightDataPointStorageD* tdps, int errBoundMode) $/;"	f
getSnapshotData_float_1D	sz/src/TightDataPointStorageF.c	/^void getSnapshotData_float_1D(float** data, int dataSeriesLength, TightDataPointStorageF* tdps, int errBoundMode)$/;"	f
getSnapshotData_float_2D	sz/src/TightDataPointStorageF.c	/^void getSnapshotData_float_2D(float** data, int r1, int r2, TightDataPointStorageF* tdps, int errBoundMode) {$/;"	f
getSnapshotData_float_3D	sz/src/TightDataPointStorageF.c	/^void getSnapshotData_float_3D(float** data, int r1, int r2, int r3, TightDataPointStorageF* tdps, int errBoundMode)$/;"	f
get_crc_table	zlib/crc32.c	/^const z_crc_t FAR * ZEXPORT get_crc_table()$/;"	f
get_crc_table	zlib/zconf.h	55;"	d
gf2_matrix_square	zlib/crc32.c	/^local void gf2_matrix_square(square, mat)$/;"	f
gf2_matrix_times	zlib/crc32.c	/^local unsigned long gf2_matrix_times(mat, vec)$/;"	f
give_advice	missing	/^give_advice ()$/;"	f
good_length	zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	file:
good_match	zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state
grid	example/testdouble_batch_f.f90	/^        real(kind=8), dimension(:,:,:), allocatable :: grid$/;"	v	program:p
grid	example/testdouble_compress_f.f90	/^        real(kind=8), dimension(:,:,:), allocatable :: grid$/;"	v	program:p
grid	example/testdouble_decompress_f.f90	/^        real(kind=8), dimension(:,:,:), allocatable :: grid$/;"	v	program:p
grid1	example/testdouble_batch_f.f90	/^        real(kind=8), dimension(:,:,:), allocatable :: grid1$/;"	v	program:p
gridsize1	example/testdouble_batch_f.f90	/^        integer(kind=4) :: gridsize1,/;"	v	program:p
gridsize1	example/testdouble_compress_f.f90	/^        integer(kind=4) :: gridsize1,/;"	v	program:p
gridsize1	example/testdouble_decompress_f.f90	/^        integer(kind=4) :: gridsize1,/;"	v	program:p
gridsize2	example/testdouble_batch_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,/;"	v	program:p
gridsize2	example/testdouble_compress_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,/;"	v	program:p
gridsize2	example/testdouble_decompress_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,/;"	v	program:p
gridsize3	example/testdouble_batch_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,gridsize3$/;"	v	program:p
gridsize3	example/testdouble_compress_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,gridsize3$/;"	v	program:p
gridsize3	example/testdouble_decompress_f.f90	/^        integer(kind=4) :: gridsize1,gridsize2,gridsize3$/;"	v	program:p
gzFile	zlib/zconf.h	134;"	d
gzFile	zlib/zlib.h	/^typedef struct gzFile_s *gzFile;    \/* semi-opaque gzip file descriptor *\/$/;"	t	typeref:struct:gzFile_s
gzFile_s	zlib/zlib.h	/^struct gzFile_s {$/;"	s
gz_avail	zlib/gzread.c	/^local int gz_avail(state)$/;"	f
gz_comp	zlib/gzwrite.c	/^local int gz_comp(state, flush)$/;"	f
gz_decomp	zlib/gzread.c	/^local int gz_decomp(state)$/;"	f
gz_error	zlib/gzlib.c	/^void ZLIB_INTERNAL gz_error(state, err, msg)$/;"	f
gz_error	zlib/zconf.h	57;"	d
gz_fetch	zlib/gzread.c	/^local int gz_fetch(state)$/;"	f
gz_header	zlib/zconf.h	136;"	d
gz_header	zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	zlib/zconf.h	150;"	d
gz_header_s	zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	zlib/zconf.h	137;"	d
gz_headerp	zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
gz_init	zlib/gzwrite.c	/^local int gz_init(state)$/;"	f
gz_intmax	zlib/gzlib.c	/^unsigned ZLIB_INTERNAL gz_intmax()$/;"	f
gz_intmax	zlib/zconf.h	58;"	d
gz_load	zlib/gzread.c	/^local int gz_load(state, buf, len, have)$/;"	f
gz_look	zlib/gzread.c	/^local int gz_look(state)$/;"	f
gz_open	zlib/gzlib.c	/^local gzFile gz_open(path, fd, mode)$/;"	f
gz_reset	zlib/gzlib.c	/^local void gz_reset(state)$/;"	f
gz_skip	zlib/gzread.c	/^local int gz_skip(state, len)$/;"	f
gz_state	zlib/gzguts.h	/^} gz_state;$/;"	t	typeref:struct:__anon4
gz_statep	zlib/gzguts.h	/^typedef gz_state FAR *gz_statep;$/;"	t
gz_strwinerror	zlib/gzlib.c	/^char ZLIB_INTERNAL *gz_strwinerror (error)$/;"	f
gz_strwinerror	zlib/zconf.h	59;"	d
gz_zero	zlib/gzwrite.c	/^local int gz_zero(state, len)$/;"	f
gzbuffer	zlib/gzlib.c	/^int ZEXPORT gzbuffer(file, size)$/;"	f
gzbuffer	zlib/zconf.h	60;"	d
gzclearerr	zlib/gzlib.c	/^void ZEXPORT gzclearerr(file)$/;"	f
gzclearerr	zlib/zconf.h	61;"	d
gzclose	zlib/gzclose.c	/^int ZEXPORT gzclose(file)$/;"	f
gzclose	zlib/zconf.h	62;"	d
gzclose_r	zlib/gzread.c	/^int ZEXPORT gzclose_r(file)$/;"	f
gzclose_r	zlib/zconf.h	63;"	d
gzclose_w	zlib/gzwrite.c	/^int ZEXPORT gzclose_w(file)$/;"	f
gzclose_w	zlib/zconf.h	64;"	d
gzdirect	zlib/gzread.c	/^int ZEXPORT gzdirect(file)$/;"	f
gzdirect	zlib/zconf.h	65;"	d
gzdopen	zlib/gzlib.c	/^gzFile ZEXPORT gzdopen(fd, mode)$/;"	f
gzdopen	zlib/zconf.h	66;"	d
gzeof	zlib/gzlib.c	/^int ZEXPORT gzeof(file)$/;"	f
gzeof	zlib/zconf.h	67;"	d
gzerror	zlib/gzlib.c	/^const char * ZEXPORT gzerror(file, errnum)$/;"	f
gzerror	zlib/zconf.h	68;"	d
gzflush	zlib/gzwrite.c	/^int ZEXPORT gzflush(file, flush)$/;"	f
gzflush	zlib/zconf.h	69;"	d
gzgetc	zlib/gzread.c	/^int ZEXPORT gzgetc(file)$/;"	f
gzgetc	zlib/gzread.c	385;"	d	file:
gzgetc	zlib/zconf.h	70;"	d
gzgetc	zlib/zlib.h	1681;"	d
gzgetc_	zlib/gzread.c	/^int ZEXPORT gzgetc_(file)$/;"	f
gzgetc_	zlib/zconf.h	71;"	d
gzgets	zlib/gzread.c	/^char * ZEXPORT gzgets(file, buf, len)$/;"	f
gzgets	zlib/zconf.h	72;"	d
gzhead	zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state
gzindex	zlib/deflate.h	/^    uInt   gzindex;      \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state
gzipMode	sz/include/sz.h	/^    int gzipMode;$/;"	m	struct:sz_params
gzipMode	sz/src/sz.c	/^int gzipMode; \/\/four options: Z_NO_COMPRESSION, or Z_BEST_SPEED, Z_BEST_COMPRESSION, Z_DEFAULT_COMPRESSION$/;"	v
gzoffset	zlib/gzlib.c	/^z_off_t ZEXPORT gzoffset(file)$/;"	f
gzoffset	zlib/zconf.h	73;"	d
gzoffset	zlib/zlib.h	1712;"	d
gzoffset64	zlib/gzlib.c	/^z_off64_t ZEXPORT gzoffset64(file)$/;"	f
gzoffset64	zlib/zconf.h	74;"	d
gzopen	zlib/gzlib.c	/^gzFile ZEXPORT gzopen(path, mode)$/;"	f
gzopen	zlib/zconf.h	75;"	d
gzopen	zlib/zlib.h	1709;"	d
gzopen64	zlib/gzlib.c	/^gzFile ZEXPORT gzopen64(path, mode)$/;"	f
gzopen64	zlib/zconf.h	76;"	d
gzopen_w	zlib/gzlib.c	/^gzFile ZEXPORT gzopen_w(path, mode)$/;"	f
gzopen_w	zlib/zconf.h	78;"	d
gzprintf	zlib/gzwrite.c	/^int ZEXPORTVA gzprintf (file, format, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10,$/;"	f
gzprintf	zlib/gzwrite.c	/^int ZEXPORTVA gzprintf(gzFile file, const char *format, ...)$/;"	f
gzprintf	zlib/zconf.h	80;"	d
gzputc	zlib/gzwrite.c	/^int ZEXPORT gzputc(file, c)$/;"	f
gzputc	zlib/zconf.h	82;"	d
gzputs	zlib/gzwrite.c	/^int ZEXPORT gzputs(file, str)$/;"	f
gzputs	zlib/zconf.h	83;"	d
gzread	zlib/gzread.c	/^int ZEXPORT gzread(file, buf, len)$/;"	f
gzread	zlib/zconf.h	84;"	d
gzrewind	zlib/gzlib.c	/^int ZEXPORT gzrewind(file)$/;"	f
gzrewind	zlib/zconf.h	85;"	d
gzseek	zlib/gzlib.c	/^z_off_t ZEXPORT gzseek(file, offset, whence)$/;"	f
gzseek	zlib/zconf.h	86;"	d
gzseek	zlib/zlib.h	1710;"	d
gzseek64	zlib/gzlib.c	/^z_off64_t ZEXPORT gzseek64(file, offset, whence)$/;"	f
gzseek64	zlib/zconf.h	87;"	d
gzsetparams	zlib/gzwrite.c	/^int ZEXPORT gzsetparams(file, level, strategy)$/;"	f
gzsetparams	zlib/zconf.h	88;"	d
gztell	zlib/gzlib.c	/^z_off_t ZEXPORT gztell(file)$/;"	f
gztell	zlib/zconf.h	89;"	d
gztell	zlib/zlib.h	1711;"	d
gztell64	zlib/gzlib.c	/^z_off64_t ZEXPORT gztell64(file)$/;"	f
gztell64	zlib/zconf.h	90;"	d
gzungetc	zlib/gzread.c	/^int ZEXPORT gzungetc(c, file)$/;"	f
gzungetc	zlib/zconf.h	91;"	d
gzvprintf	zlib/gzwrite.c	/^int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va)$/;"	f
gzvprintf	zlib/zconf.h	81;"	d
gzwrite	zlib/gzwrite.c	/^int ZEXPORT gzwrite(file, buf, len)$/;"	f
gzwrite	zlib/zconf.h	92;"	d
hash	sz/include/dictionary.h	/^    unsigned     *  hash ;  \/** List of hash values for keys *\/$/;"	m	struct:_dictionary_
hash_bits	zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state
hash_mask	zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state
hash_shift	zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state
hash_size	zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state
have	zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state
have	zlib/zlib.h	/^    unsigned have;$/;"	m	struct:gzFile_s
havedict	zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state
hcrc	zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state
head	zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state
header	sz/include/VarSet.h	/^	struct SZ_Variable *header;$/;"	m	struct:SZ_VarSet	typeref:struct:SZ_VarSet::SZ_Variable
heap	zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state
heap_len	zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state
heap_max	zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state
high_water	zlib/deflate.h	/^    ulg high_water;$/;"	m	struct:internal_state
hold	zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	example/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	sz/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	zlib/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	example/Makefile	/^host_alias = $/;"	m
host_alias	sz/Makefile	/^host_alias = $/;"	m
host_alias	zlib/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	example/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	sz/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	zlib/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	example/Makefile	/^host_os = linux-gnu$/;"	m
host_os	sz/Makefile	/^host_os = linux-gnu$/;"	m
host_os	zlib/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	example/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	sz/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	zlib/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	example/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	sz/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	zlib/Makefile	/^host_vendor = unknown$/;"	m
how	zlib/gzguts.h	/^    int how;                \/* 0: get header, 1: copy, 2: decompress *\/$/;"	m	struct:__anon4
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	example/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	sz/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	zlib/Makefile	/^htmldir = ${docdir}$/;"	m
i	example/testdouble_batch_f.f90	/^        in/;"	v	program:p
i	example/testdouble_compress_f.f90	/^        in/;"	v	program:p
i	example/testdouble_decompress_f.f90	/^        in/;"	v	program:p
ierr	example/testdouble_batch_f.f90	/^        integer(kind=4) :: ierr,/;"	v	program:p
ierr	example/testdouble_compress_f.f90	/^        integer(kind=4) :: ierr,/;"	v	program:p
ierr	example/testdouble_decompress_f.f90	/^        integer(kind=4) :: ierr,/;"	v	program:p
in	zlib/gzguts.h	/^    unsigned char *in;      \/* input buffer *\/$/;"	m	struct:__anon4
in_func	zlib/zconf.h	138;"	d
in_func	zlib/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *,$/;"	t
include_HEADERS	sz/Makefile	/^include_HEADERS = include\/CompressElement.h include\/DynamicDoubleArray.h include\/rw.h\\$/;"	m
include_HEADERS	zlib/Makefile	/^include_HEADERS = inffixed.h inflate.h inftrees.h trees.h zconf.h crc32.h deflate.h gzguts.h inffast.h zlib.h zutil.h$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	example/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	sz/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	zlib/Makefile	/^includedir = ${prefix}\/include$/;"	m
inflate	zlib/inflate.c	/^int ZEXPORT inflate(strm, flush)$/;"	f
inflate	zlib/zconf.h	94;"	d
inflateBack	zlib/infback.c	/^int ZEXPORT inflateBack(strm, in, in_desc, out, out_desc)$/;"	f
inflateBack	zlib/zconf.h	95;"	d
inflateBackEnd	zlib/infback.c	/^int ZEXPORT inflateBackEnd(strm)$/;"	f
inflateBackEnd	zlib/zconf.h	96;"	d
inflateBackInit	zlib/zlib.h	1657;"	d
inflateBackInit_	zlib/infback.c	/^int ZEXPORT inflateBackInit_(strm, windowBits, window, version, stream_size)$/;"	f
inflateBackInit_	zlib/zconf.h	97;"	d
inflateCopy	zlib/inflate.c	/^int ZEXPORT inflateCopy(dest, source)$/;"	f
inflateCopy	zlib/zconf.h	98;"	d
inflateEnd	zlib/inflate.c	/^int ZEXPORT inflateEnd(strm)$/;"	f
inflateEnd	zlib/zconf.h	99;"	d
inflateGetDictionary	zlib/inflate.c	/^int ZEXPORT inflateGetDictionary(strm, dictionary, dictLength)$/;"	f
inflateGetDictionary	zlib/zconf.h	108;"	d
inflateGetHeader	zlib/inflate.c	/^int ZEXPORT inflateGetHeader(strm, head)$/;"	f
inflateGetHeader	zlib/zconf.h	100;"	d
inflateInit	zlib/zlib.h	1649;"	d
inflateInit2	zlib/zlib.h	1654;"	d
inflateInit2_	zlib/inflate.c	/^int ZEXPORT inflateInit2_(strm, windowBits, version, stream_size)$/;"	f
inflateInit2_	zlib/zconf.h	101;"	d
inflateInit_	zlib/inflate.c	/^int ZEXPORT inflateInit_(strm, version, stream_size)$/;"	f
inflateInit_	zlib/zconf.h	102;"	d
inflateMark	zlib/inflate.c	/^long ZEXPORT inflateMark(strm)$/;"	f
inflateMark	zlib/zconf.h	103;"	d
inflatePrime	zlib/inflate.c	/^int ZEXPORT inflatePrime(strm, bits, value)$/;"	f
inflatePrime	zlib/zconf.h	104;"	d
inflateReset	zlib/inflate.c	/^int ZEXPORT inflateReset(strm)$/;"	f
inflateReset	zlib/zconf.h	105;"	d
inflateReset2	zlib/inflate.c	/^int ZEXPORT inflateReset2(strm, windowBits)$/;"	f
inflateReset2	zlib/zconf.h	106;"	d
inflateResetKeep	zlib/inflate.c	/^int ZEXPORT inflateResetKeep(strm)$/;"	f
inflateResetKeep	zlib/zconf.h	112;"	d
inflateSetDictionary	zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)$/;"	f
inflateSetDictionary	zlib/zconf.h	107;"	d
inflateSync	zlib/inflate.c	/^int ZEXPORT inflateSync(strm)$/;"	f
inflateSync	zlib/zconf.h	109;"	d
inflateSyncPoint	zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(strm)$/;"	f
inflateSyncPoint	zlib/zconf.h	110;"	d
inflateUndermine	zlib/inflate.c	/^int ZEXPORT inflateUndermine(strm, subvert)$/;"	f
inflateUndermine	zlib/zconf.h	111;"	d
inflate_copyright	zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v
inflate_copyright	zlib/zconf.h	113;"	d
inflate_fast	zlib/inffast.c	/^void ZLIB_INTERNAL inflate_fast(strm, start)$/;"	f
inflate_fast	zlib/zconf.h	114;"	d
inflate_mode	zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon3
inflate_state	zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	zlib/inftrees.c	/^int ZLIB_INTERNAL inflate_table(type, lens, codes, table, bits, work)$/;"	f
inflate_table	zlib/zconf.h	115;"	d
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	example/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	sz/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	zlib/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
iniparser_dump	sz/src/iniparser.c	/^void iniparser_dump(dictionary * d, FILE * f)$/;"	f
iniparser_dump_ini	sz/src/iniparser.c	/^void iniparser_dump_ini(dictionary * d, FILE * f)$/;"	f
iniparser_dumpsection_ini	sz/src/iniparser.c	/^void iniparser_dumpsection_ini(dictionary * d, char * s, FILE * f)$/;"	f
iniparser_find_entry	sz/src/iniparser.c	/^int iniparser_find_entry($/;"	f
iniparser_freedict	sz/src/iniparser.c	/^void iniparser_freedict(dictionary * d)$/;"	f
iniparser_getboolean	sz/src/iniparser.c	/^int iniparser_getboolean(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getdouble	sz/src/iniparser.c	/^double iniparser_getdouble(dictionary * d, const char * key, double notfound)$/;"	f
iniparser_getint	sz/src/iniparser.c	/^int iniparser_getint(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getnsec	sz/src/iniparser.c	/^int iniparser_getnsec(dictionary * d)$/;"	f
iniparser_getseckeys	sz/src/iniparser.c	/^char ** iniparser_getseckeys(dictionary * d, char * s)$/;"	f
iniparser_getsecname	sz/src/iniparser.c	/^char * iniparser_getsecname(dictionary * d, int n)$/;"	f
iniparser_getsecnkeys	sz/src/iniparser.c	/^int iniparser_getsecnkeys(dictionary * d, char * s)$/;"	f
iniparser_getstring	sz/src/iniparser.c	/^char * iniparser_getstring(dictionary * d, const char * key, char * def)$/;"	f
iniparser_line	sz/src/iniparser.c	/^static line_status iniparser_line($/;"	f	file:
iniparser_load	sz/src/iniparser.c	/^dictionary * iniparser_load(const char * ininame)$/;"	f
iniparser_set	sz/src/iniparser.c	/^int iniparser_set(dictionary * ini, const char * entry, const char * val)$/;"	f
iniparser_unset	sz/src/iniparser.c	/^void iniparser_unset(dictionary * ini, const char * entry)$/;"	f
init	sz/src/Huffman.c	/^void init(int *s, int length)$/;"	f
init_block	zlib/trees.c	/^local void init_block(s)$/;"	f
ins_h	zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state
insert	zlib/deflate.h	/^    uInt insert;        \/* bytes at end of window left to insert *\/$/;"	m	struct:internal_state
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/install-sh$/;"	m
install_sh	example/Makefile	/^install_sh = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/install-sh$/;"	m
install_sh	sz/Makefile	/^install_sh = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/install-sh$/;"	m
install_sh	zlib/Makefile	/^install_sh = ${SHELL} \/home\/qliu\/DREvaluation\/SZ\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	example/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	sz/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	zlib/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	example/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	sz/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	zlib/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	example/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	sz/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zlib/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
intToBytes_bigEndian	sz/src/ByteToolkit.c	/^void intToBytes_bigEndian(unsigned char *b, unsigned int num)$/;"	f
integerMidBytes	sz/include/CompressElement.h	/^	unsigned char integerMidBytes[8];$/;"	m	struct:LossyCompressionElement
integerMidBytes_Length	sz/include/CompressElement.h	/^	int integerMidBytes_Length; \/\/they are mid_bits actually$/;"	m	struct:LossyCompressionElement
internal_state	zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	zlib/zconf.h	151;"	d
internal_state	zlib/zlib.h	/^    struct internal_state {int dummy;};$/;"	s
internal_state	zlib/zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
intervals	sz/include/TightDataPointStorageD.h	/^	unsigned int intervals;$/;"	m	struct:TightDataPointStorageD
intervals	sz/include/TightDataPointStorageF.h	/^	unsigned int intervals; \/\/quantization_intervals$/;"	m	struct:TightDataPointStorageF
intf	zlib/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	zlib/zconf.h	139;"	d
intvCapacity	sz/src/sz.c	/^int intvCapacity = 0;$/;"	v
intvRadius	sz/src/sz.c	/^int intvRadius = 0;$/;"	v
isLossless	sz/include/TightDataPointStorageD.h	/^	unsigned char isLossless; \/\/a mark to denote whether it's lossless compression (1 is yes, 0 is no)$/;"	m	struct:TightDataPointStorageD
isLossless	sz/include/TightDataPointStorageF.h	/^	unsigned char isLossless; \/\/a mark to denote whether it's lossless compression (1 is yes, 0 is no)$/;"	m	struct:TightDataPointStorageF
isZlibFormat	sz/src/sz.c	/^int isZlibFormat(unsigned char magic1, unsigned char magic2)$/;"	f
ivalue	sz/include/sz.h	/^    unsigned int ivalue;$/;"	m	union:lfloat
j	example/testdouble_batch_f.f90	/^        integer :: i,j,/;"	v	program:p
j	example/testdouble_compress_f.f90	/^        integer :: i,j,/;"	v	program:p
j	example/testdouble_decompress_f.f90	/^        integer :: i,j,/;"	v	program:p
k	example/testdouble_batch_f.f90	/^        integer :: i,j,k$/;"	v	program:p
k	example/testdouble_compress_f.f90	/^        integer :: i,j,k$/;"	v	program:p
k	example/testdouble_decompress_f.f90	/^        integer :: i,j,k$/;"	v	program:p
key	sz/include/dictionary.h	/^    char        **  key ;   \/** List of string keys *\/$/;"	m	struct:_dictionary_
l_buf	zlib/deflate.h	/^    uchf *l_buf;          \/* buffer for literals or lengths *\/$/;"	m	struct:internal_state
l_desc	zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:internal_state::tree_desc_s
last	zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state
lastVar	sz/include/VarSet.h	/^	struct SZ_Variable *lastVar;$/;"	m	struct:SZ_VarSet	typeref:struct:SZ_VarSet::SZ_Variable
last_flush	zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state
last_lit	zlib/deflate.h	/^    uInt last_lit;      \/* running index in l_buf *\/$/;"	m	struct:internal_state
layers	sz/include/sz.h	/^    int layers;$/;"	m	struct:sz_params
layers	sz/src/sz.c	/^int layers = 1;$/;"	v
ldouble	sz/include/sz.h	/^typedef union ldouble$/;"	u
ldouble	sz/include/sz.h	/^} ldouble;$/;"	t	typeref:union:ldouble
leadNumArray	sz/include/TightDataPointStorageD.h	/^	unsigned char* leadNumArray; \/\/its size is exactDataNum\/4 (or exactDataNum\/4+1)$/;"	m	struct:TightDataPointStorageD
leadNumArray	sz/include/TightDataPointStorageF.h	/^	unsigned char* leadNumArray; \/\/its size is exactDataNum\/4 (or exactDataNum\/4+1)$/;"	m	struct:TightDataPointStorageF
leadNumArray_size	sz/include/TightDataPointStorageD.h	/^	int leadNumArray_size;$/;"	m	struct:TightDataPointStorageD
leadNumArray_size	sz/include/TightDataPointStorageF.h	/^	int leadNumArray_size;$/;"	m	struct:TightDataPointStorageF
leadingZeroBytes	sz/include/CompressElement.h	/^	int leadingZeroBytes; \/\/0,1,2,or 3$/;"	m	struct:LossyCompressionElement
left	sz/include/Huffman.h	/^	struct node_t *left, *right;$/;"	m	struct:node_t	typeref:struct:node_t::node_t
len	zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anon7
lenbits	zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state
lencode	zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state
lenfix	zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v
length	zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state
lens	zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state
level	zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state
level	zlib/gzguts.h	/^    int level;              \/* compression level *\/$/;"	m	struct:__anon4
lfloat	sz/include/sz.h	/^typedef union lfloat$/;"	u
lfloat	sz/include/sz.h	/^} lfloat;$/;"	t	typeref:union:lfloat
lib_LTLIBRARIES	sz/Makefile	/^lib_LTLIBRARIES = libsz.la$/;"	m
lib_LTLIBRARIES	zlib/Makefile	/^lib_LTLIBRARIES = libzlib.la$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	example/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	sz/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	zlib/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	example/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	sz/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	zlib/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libsz_la_CFLAGS	sz/Makefile	/^libsz_la_CFLAGS = -g -I.\/include -I..\/zlib\/$/;"	m
libsz_la_LDFLAGS	sz/Makefile	/^libsz_la_LDFLAGS = -version-info  1:4:0$/;"	m
libsz_la_LIBADD	sz/Makefile	/^libsz_la_LIBADD =$/;"	m
libsz_la_LIDADD	sz/Makefile	/^libsz_la_LIDADD = ..\/zlib\/.libs\/libzlib.a$/;"	m
libsz_la_LINK	sz/Makefile	/^libsz_la_LINK = $(AM_V_CC)$(LIBTOOL) --tag=CC --mode=link $(CCLD) $(libsz_la_CFLAGS) -O3 $(libsz_la_LDFLAGS) -o $(lib_LTLIBRARIES)$/;"	m
libsz_la_OBJECTS	sz/Makefile	/^libsz_la_OBJECTS = $(am_libsz_la_OBJECTS)$/;"	m
libsz_la_SOURCES	sz/Makefile	/^libsz_la_SOURCES = src\/ByteToolkit.c src\/dataCompression.c src\/DynamicIntArray.c src\/iniparser.c\\$/;"	m
libzlib_la_CFLAGS	zlib/Makefile	/^libzlib_la_CFLAGS = -g -I.\/$/;"	m
libzlib_la_LIBADD	zlib/Makefile	/^libzlib_la_LIBADD =$/;"	m
libzlib_la_LINK	zlib/Makefile	/^libzlib_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libzlib_la_OBJECTS	zlib/Makefile	/^libzlib_la_OBJECTS = $(am_libzlib_la_OBJECTS)$/;"	m
libzlib_la_SOURCES	zlib/Makefile	/^libzlib_la_SOURCES = adler32.c crc32.c deflate.c gzclose.c gzlib.c gzwrite.c inffast.c zutil.c compress.c \\$/;"	m
line_status	sz/src/iniparser.c	/^} line_status ;$/;"	t	typeref:enum:_line_status_	file:
listAdd_double	sz/src/CompressElement.c	/^inline void listAdd_double(double last3CmprsData[3], double value)$/;"	f
listAdd_float	sz/src/CompressElement.c	/^inline void listAdd_float(float last3CmprsData[3], float value)$/;"	f
lit_bufsize	zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state
lm_init	zlib/deflate.c	/^local void lm_init (s)$/;"	f
local	zlib/adler32.c	10;"	d	file:
local	zlib/crc32.c	33;"	d	file:
local	zlib/gzguts.h	107;"	d
local	zlib/zutil.h	37;"	d
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	example/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	sz/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	zlib/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	example/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	sz/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	zlib/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
longToBytes_bigEndian	sz/src/ByteToolkit.c	/^void longToBytes_bigEndian(unsigned char *b, unsigned long num) $/;"	f
longest_match	zlib/deflate.c	/^local uInt longest_match(s, cur_match)$/;"	f
lookahead	zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state
lshort	sz/include/sz.h	/^typedef union lshort$/;"	u
lshort	sz/include/sz.h	/^} lshort;$/;"	t	typeref:union:lshort
lvalue	sz/include/sz.h	/^    unsigned long lvalue;$/;"	m	union:ldouble
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	example/testdouble_batch_compress.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testdouble_compress.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testdouble_decompress.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testfloat_CompDecomp.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testfloat_batch_compress.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testfloat_compress.c	/^int main(int argc, char * argv[])$/;"	f
main	example/testfloat_decompress.c	/^int main(int argc, char * argv[])$/;"	f
main	sz/src/dictionary.c	/^int main(int argc, char *argv[])$/;"	f
make_crc_table	zlib/crc32.c	/^local void make_crc_table()$/;"	f
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
makefixed	zlib/inflate.c	/^void makefixed()$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	example/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	sz/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	zlib/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
match_available	zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state
match_length	zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state
match_start	zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state
matches	zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state
maxHeap	sz/src/sz.c	/^char maxHeap[10];$/;"	v
maxRangeRadius	sz/src/sz.c	/^unsigned int maxRangeRadius = 32768;$/;"	v
max_chain	zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	file:
max_chain_length	zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state
max_code	zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s
max_d	sz/src/dataCompression.c	/^double max_d(double a, double b)$/;"	f
max_f	sz/src/dataCompression.c	/^float max_f(float a, float b)$/;"	f
max_insert_length	zlib/deflate.h	179;"	d
max_lazy	zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	file:
max_lazy_match	zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state
max_length	zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	file:
max_quant_intervals	sz/include/sz.h	/^	unsigned int max_quant_intervals;$/;"	m	struct:sz_params
medianValue	sz/include/TightDataPointStorageD.h	/^	double medianValue;$/;"	m	struct:TightDataPointStorageD
medianValue	sz/include/TightDataPointStorageF.h	/^	float medianValue;$/;"	m	struct:TightDataPointStorageF
mem_double	sz/src/dictionary.c	/^static void * mem_double(void * ptr, int size)$/;"	f	file:
memcpyDBA_Data	sz/src/DynamicByteArray.c	/^void memcpyDBA_Data(DynamicByteArray *dba, unsigned char* data, int length)$/;"	f
method	zlib/deflate.h	/^    Byte  method;        \/* can only be DEFLATED *\/$/;"	m	struct:internal_state
min_d	sz/src/dataCompression.c	/^double min_d(double a, double b)$/;"	f
min_f	sz/src/dataCompression.c	/^float min_f(float a, float b)$/;"	f
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	example/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	sz/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	zlib/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	example/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	sz/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	zlib/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mode	zlib/gzguts.h	/^    int mode;               \/* see gzip modes above *\/$/;"	m	struct:__anon4
mode	zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state
msg	zlib/gzguts.h	/^    char *msg;              \/* error message *\/$/;"	m	struct:__anon4
msg	zlib/zlib.h	/^    z_const char *msg;  \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
n	sz/include/dictionary.h	/^    int             n ;     \/** Number of entries in dictionary *\/$/;"	m	struct:_dictionary_
n_inode	sz/src/Huffman.c	/^int n_inode = 0;$/;"	v
n_nodes	sz/src/Huffman.c	/^int n_nodes = 0;$/;"	v
name	zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name_max	zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
ncode	zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state
ndist	zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state
need_more	zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anon5	file:
new_DBA	sz/src/DynamicByteArray.c	/^void new_DBA(DynamicByteArray **dba, int cap) {$/;"	f
new_DDA	sz/src/DynamicDoubleArray.c	/^void new_DDA(DynamicDoubleArray **dda, int cap) {$/;"	f
new_DFA	sz/src/DynamicFloatArray.c	/^void new_DFA(DynamicFloatArray **dfa, int cap) {$/;"	f
new_DIA	sz/src/DynamicIntArray.c	/^void new_DIA(DynamicIntArray **dia, int cap) {$/;"	f
new_LossyCompressionElement	sz/src/CompressElement.c	/^void new_LossyCompressionElement(LossyCompressionElement *lce, int leadingNum, unsigned char* intMidBytes, $/;"	f
new_TightDataPointStorageD	sz/src/TightDataPointStorageD.c	/^void new_TightDataPointStorageD(TightDataPointStorageD **this, $/;"	f
new_TightDataPointStorageD_Empty	sz/src/TightDataPointStorageD.c	/^void new_TightDataPointStorageD_Empty(TightDataPointStorageD **this)$/;"	f
new_TightDataPointStorageD_fromFlatBytes	sz/src/TightDataPointStorageD.c	/^int new_TightDataPointStorageD_fromFlatBytes(TightDataPointStorageD **this, unsigned char* flatBytes, int flatBytesLength)$/;"	f
new_TightDataPointStorageF	sz/src/TightDataPointStorageF.c	/^void new_TightDataPointStorageF(TightDataPointStorageF **this,$/;"	f
new_TightDataPointStorageF_Empty	sz/src/TightDataPointStorageF.c	/^void new_TightDataPointStorageF_Empty(TightDataPointStorageF **this)$/;"	f
new_TightDataPointStorageF_fromFlatBytes	sz/src/TightDataPointStorageF.c	/^int new_TightDataPointStorageF_fromFlatBytes(TightDataPointStorageF **this, unsigned char* flatBytes, int flatBytesLength)$/;"	f
new_node	sz/src/Huffman.c	/^node new_node(int freq, unsigned int c, node a, node b)$/;"	f
new_node2	sz/src/Huffman.c	/^node new_node2(unsigned int c, unsigned char t)$/;"	f
new_ptr	zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	file:
next	sz/include/VarSet.h	/^	struct SZ_Variable* next;$/;"	m	struct:SZ_Variable	typeref:struct:SZ_Variable::SZ_Variable
next	zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state
next	zlib/zlib.h	/^    unsigned char *next;$/;"	m	struct:gzFile_s
next_in	zlib/zlib.h	/^    z_const Bytef *next_in;     \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_ptr	zlib/zutil.c	/^local int next_ptr = 0;$/;"	v
nice_length	zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	file:
nice_match	zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state
nlen	zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state
node	sz/include/Huffman.h	/^} *node;$/;"	t	typeref:struct:node_t
node_t	sz/include/Huffman.h	/^typedef struct node_t {$/;"	s
numberOfLeadingZeros_Int	sz/src/ByteToolkit.c	/^unsigned char numberOfLeadingZeros_Int(int i) {$/;"	f
numberOfLeadingZeros_Long	sz/src/ByteToolkit.c	/^unsigned char numberOfLeadingZeros_Long(long i) {$/;"	f
offset	sz/include/sz.h	/^    int offset;$/;"	m	struct:sz_params
offset	sz/src/sz.c	/^int offset;$/;"	v
offset	zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	example/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	sz/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	zlib/Makefile	/^oldincludedir = \/usr\/include$/;"	m
op	zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon1
opaque	zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open	zlib/gzguts.h	39;"	d
optQuantMode	sz/src/sz.c	/^char optQuantMode = 0; \/\/opt Quantization (0: fixed ; 1: optimized)$/;"	v
opt_len	zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state
optimize_intervals_double_1D	sz/src/sz_double.c	/^unsigned int optimize_intervals_double_1D(double *oriData, int dataLength, double realPrecision)$/;"	f
optimize_intervals_double_1D_pwr	sz/src/sz_double_pwr.c	/^unsigned int optimize_intervals_double_1D_pwr(double *oriData, int dataLength, double* pwrErrBound)$/;"	f
optimize_intervals_double_2D	sz/src/sz_double.c	/^unsigned int optimize_intervals_double_2D(double *oriData, int r1, int r2, double realPrecision)$/;"	f
optimize_intervals_double_2D_pwr	sz/src/sz_double_pwr.c	/^unsigned int optimize_intervals_double_2D_pwr(double *oriData, int r1, int r2, int R2, int edgeSize, double* pwrErrBound)$/;"	f
optimize_intervals_double_3D	sz/src/sz_double.c	/^unsigned int optimize_intervals_double_3D(double *oriData, int r1, int r2, int r3, double realPrecision)$/;"	f
optimize_intervals_double_3D_pwr	sz/src/sz_double_pwr.c	/^unsigned int optimize_intervals_double_3D_pwr(double *oriData, int r1, int r2, int r3, int R2, int R3, int edgeSize, double* pwrErrBound)$/;"	f
optimize_intervals_float_1D	sz/src/sz_float.c	/^unsigned int optimize_intervals_float_1D(float *oriData, int dataLength, double realPrecision)$/;"	f
optimize_intervals_float_1D_pwr	sz/src/sz_float_pwr.c	/^unsigned int optimize_intervals_float_1D_pwr(float *oriData, int dataLength, float* pwrErrBound)$/;"	f
optimize_intervals_float_2D	sz/src/sz_float.c	/^unsigned int optimize_intervals_float_2D(float *oriData, int r1, int r2, double realPrecision)$/;"	f
optimize_intervals_float_2D_pwr	sz/src/sz_float_pwr.c	/^unsigned int optimize_intervals_float_2D_pwr(float *oriData, int r1, int r2, int R2, int edgeSize, float* pwrErrBound)$/;"	f
optimize_intervals_float_3D	sz/src/sz_float.c	/^unsigned int optimize_intervals_float_3D(float *oriData, int r1, int r2, int r3, double realPrecision)$/;"	f
optimize_intervals_float_3D_pwr	sz/src/sz_float_pwr.c	/^unsigned int optimize_intervals_float_3D_pwr(float *oriData, int r1, int r2, int r3, int R2, int R3, int edgeSize, float* pwrErrBound)$/;"	f
org_ptr	zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	file:
os	zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
out	zlib/gzguts.h	/^    unsigned char *out;     \/* output buffer (double-sized when reading) *\/$/;"	m	struct:__anon4
outSize	example/testdouble_batch_f.f90	/^        integer(kind=4) :: ierr, outSize /;"	v	program:p
outSize	example/testdouble_compress_f.f90	/^        integer(kind=4) :: ierr, outSize /;"	v	program:p
outSize	example/testdouble_decompress_f.f90	/^        integer(kind=4) :: ierr, outSize /;"	v	program:p
out_func	zlib/zconf.h	140;"	d
out_func	zlib/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
p	example/testdouble_batch_f.f90	/^pr/;"	p
p	example/testdouble_compress_f.f90	/^pr/;"	p
p	example/testdouble_decompress_f.f90	/^pr/;"	p
pad_tree_uchar	sz/src/Huffman.c	/^void pad_tree_uchar(unsigned char* L, unsigned char* R, unsigned int* C, unsigned char* t, unsigned int i, node root)$/;"	f
pad_tree_uint	sz/src/Huffman.c	/^void pad_tree_uint(unsigned int* L, unsigned int* R, unsigned int* C, unsigned char* t, unsigned int i, node root)$/;"	f
pad_tree_ushort	sz/src/Huffman.c	/^void pad_tree_ushort(unsigned short* L, unsigned short* R, unsigned int* C, unsigned char* t, unsigned int i, node root)$/;"	f
past	zlib/gzguts.h	/^    int past;               \/* true if read requested past end *\/$/;"	m	struct:__anon4
path	zlib/gzguts.h	/^    char *path;             \/* path or fd for error messages *\/$/;"	m	struct:__anon4
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	example/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	sz/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	zlib/Makefile	/^pdfdir = ${docdir}$/;"	m
pending	zlib/deflate.h	/^    uInt   pending;      \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state
pending_buf	zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state
pending_buf_size	zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state
pending_out	zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/sz$/;"	m
pkgdatadir	example/Makefile	/^pkgdatadir = $(datadir)\/sz$/;"	m
pkgdatadir	sz/Makefile	/^pkgdatadir = $(datadir)\/sz$/;"	m
pkgdatadir	zlib/Makefile	/^pkgdatadir = $(datadir)\/sz$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/sz$/;"	m
pkgincludedir	example/Makefile	/^pkgincludedir = $(includedir)\/sz$/;"	m
pkgincludedir	sz/Makefile	/^pkgincludedir = $(includedir)\/sz$/;"	m
pkgincludedir	zlib/Makefile	/^pkgincludedir = $(includedir)\/sz$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/sz$/;"	m
pkglibdir	example/Makefile	/^pkglibdir = $(libdir)\/sz$/;"	m
pkglibdir	sz/Makefile	/^pkglibdir = $(libdir)\/sz$/;"	m
pkglibdir	zlib/Makefile	/^pkglibdir = $(libdir)\/sz$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/sz$/;"	m
pkglibexecdir	example/Makefile	/^pkglibexecdir = $(libexecdir)\/sz$/;"	m
pkglibexecdir	sz/Makefile	/^pkglibexecdir = $(libexecdir)\/sz$/;"	m
pkglibexecdir	zlib/Makefile	/^pkglibexecdir = $(libexecdir)\/sz$/;"	m
pool	sz/src/Huffman.c	/^node pool = NULL;$/;"	v
pos	zlib/zlib.h	/^    z_off64_t pos;$/;"	m	struct:gzFile_s
pqdownheap	zlib/trees.c	/^local void pqdownheap(s, tree, k)$/;"	f
pqremove	zlib/trees.c	432;"	d	file:
predThreshold	sz/include/sz.h	/^    float predThreshold;    $/;"	m	struct:sz_params
predThreshold	sz/src/sz.c	/^float predThreshold = 0.98;$/;"	v
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	example/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	sz/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	zlib/Makefile	/^prefix = \/usr\/local$/;"	m
prev	zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state
prev_length	zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state
prev_match	zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state
program_details	missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	example/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	sz/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	zlib/Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	example/Makefile	/^psdir = ${docdir}$/;"	m
psdir	sz/Makefile	/^psdir = ${docdir}$/;"	m
psdir	zlib/Makefile	/^psdir = ${docdir}$/;"	m
ptr_table	zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrdiff_t	zlib/zutil.h	/^       typedef int ptrdiff_t;$/;"	t
ptrdiff_t	zlib/zutil.h	/^   typedef long ptrdiff_t;  \/* guess -- will be caught if guess is wrong *\/$/;"	t
putShortMSB	zlib/deflate.c	/^local void putShortMSB (s, b)$/;"	f
put_byte	zlib/deflate.h	278;"	d
put_short	zlib/trees.c	176;"	d	file:
pw_relBoundRatio	sz/include/sz.h	/^    double pw_relBoundRatio;$/;"	m	struct:sz_params
pw_relBoundRatio	sz/src/sz.c	/^double pw_relBoundRatio;$/;"	v
pwrErrBoundBytes	sz/include/TightDataPointStorageD.h	/^	unsigned char* pwrErrBoundBytes;$/;"	m	struct:TightDataPointStorageD
pwrErrBoundBytes	sz/include/TightDataPointStorageF.h	/^	unsigned char* pwrErrBoundBytes;$/;"	m	struct:TightDataPointStorageF
pwrErrBoundBytes_size	sz/include/TightDataPointStorageD.h	/^	int pwrErrBoundBytes_size;$/;"	m	struct:TightDataPointStorageD
pwrErrBoundBytes_size	sz/include/TightDataPointStorageF.h	/^	int pwrErrBoundBytes_size;$/;"	m	struct:TightDataPointStorageF
qend	sz/src/Huffman.c	/^int qend = 1;$/;"	v
qinsert	sz/src/Huffman.c	/^void qinsert(node n)$/;"	f
qq	sz/src/Huffman.c	/^node *qq = NULL;$/;"	v
qqq	sz/src/Huffman.c	/^node *qqq = NULL;$/;"	v
qremove	sz/src/Huffman.c	/^node qremove()$/;"	f
quantization_intervals	sz/include/sz.h	/^	unsigned int quantization_intervals;$/;"	m	struct:sz_params
r1	sz/include/VarSet.h	/^	int r1;$/;"	m	struct:SZ_Variable
r2	sz/include/VarSet.h	/^	int r2;$/;"	m	struct:SZ_Variable
r3	sz/include/VarSet.h	/^	int r3;$/;"	m	struct:SZ_Variable
r4	sz/include/VarSet.h	/^	int r4;$/;"	m	struct:SZ_Variable
r5	sz/include/VarSet.h	/^	int r5;$/;"	m	struct:SZ_Variable
radExpo	sz/include/TightDataPointStorageD.h	/^	char radExpo; \/\/used to compute reqLength based on segmented precisions in "pw_rel_compression"$/;"	m	struct:TightDataPointStorageD
radExpo	sz/include/TightDataPointStorageF.h	/^	char radExpo; \/\/used to compute reqLength based on segmented precisions in "pw_rel_compression"$/;"	m	struct:TightDataPointStorageF
reOrgSize	sz/src/sz.c	/^int reOrgSize; \/\/the granularity of the reganization of the original data$/;"	v
read	zlib/gzguts.h	40;"	d
readByteData	sz/src/rw.c	/^unsigned char *readByteData(char *srcFilePath, int *byteLength, int *status)$/;"	f
readByteData	sz/src/rw_interface.F90	/^	SUBROUTINE readByteData(/;"	s	module:RW
readDoubleData	sz/src/rw.c	/^double *readDoubleData(char *srcFilePath, int *nbEle, int *status)$/;"	f
readDoubleData	sz/src/rw_interface.F90	/^	SUBROUTINE readDoubleData(/;"	s	module:RW
readDoubleData_systemEndian	sz/src/rw.c	/^double *readDoubleData_systemEndian(char *srcFilePath, int *nbEle, int *status)$/;"	f
readFloatData	sz/src/rw.c	/^float *readFloatData(char *srcFilePath, int *nbEle, int *status)$/;"	f
readFloatData	sz/src/rw_interface.F90	/^	SUBROUTINE readFloatData(/;"	s	module:RW
readFloatData_systemEndian	sz/src/rw.c	/^float *readFloatData_systemEndian(char *srcFilePath, int *nbEle, int *status)$/;"	f
readShortData	sz/src/rw.c	/^unsigned short* readShortData(char *srcFilePath, int *dataLength, int *status)$/;"	f
read_buf	zlib/deflate.c	/^local int read_buf(strm, buf, size)$/;"	f
readbytefile_	sz/src/rwf.c	/^void readbytefile_(char *srcFilePath, int *len, unsigned char *bytes, int *byteLength)$/;"	f
readdoublefile_	sz/src/rwf.c	/^void readdoublefile_(char *srcFilePath, int *len, double *data, int *nbEle)$/;"	f
readfloatfile_	sz/src/rwf.c	/^void readfloatfile_(char *srcFilePath, int *len, float *data, int *nbEle)$/;"	f
realPrecision	sz/include/TightDataPointStorageD.h	/^	double realPrecision;$/;"	m	struct:TightDataPointStorageD
realPrecision	sz/include/TightDataPointStorageF.h	/^	double realPrecision; \/\/it's used as the pwrErrBoundRatio when errBoundMode==PW_REL$/;"	m	struct:TightDataPointStorageF
reconstruct_HuffTree_from_bytes_anyStates	sz/src/Huffman.c	/^node reconstruct_HuffTree_from_bytes_anyStates(unsigned char* bytes, int nodeCount)$/;"	f
relBoundRatio	sz/include/VarSet.h	/^	double relBoundRatio;$/;"	m	struct:SZ_Variable
relBoundRatio	sz/include/sz.h	/^    double relBoundRatio;$/;"	m	struct:sz_params
relBoundRatio	sz/src/sz.c	/^double relBoundRatio;$/;"	v
reqBytesLength	sz/include/CompressElement.h	/^	int reqBytesLength;$/;"	m	struct:DoubleValueCompressElement
reqBytesLength	sz/include/CompressElement.h	/^	int reqBytesLength;$/;"	m	struct:FloatValueCompressElement
reqLength	sz/include/TightDataPointStorageD.h	/^	char reqLength;	$/;"	m	struct:TightDataPointStorageD
reqLength	sz/include/TightDataPointStorageF.h	/^	char reqLength;$/;"	m	struct:TightDataPointStorageF
res	example/testdouble_batch_f.f90	/^        real(kind=8) :: res=/;"	v	program:p
res	example/testdouble_compress_f.f90	/^        real(kind=8) :: res=/;"	v	program:p
res	example/testdouble_decompress_f.f90	/^        real(kind=8) :: res=/;"	v	program:p
resMidBitsLength	sz/include/CompressElement.h	/^	int resMidBitsLength;$/;"	m	struct:LossyCompressionElement
reserved	zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reservedValue	sz/include/TightDataPointStorageD.h	/^	double reservedValue;$/;"	m	struct:TightDataPointStorageD
reservedValue	sz/include/TightDataPointStorageF.h	/^	float reservedValue;$/;"	m	struct:TightDataPointStorageF
resiBitsLength	sz/include/CompressElement.h	/^	int resiBitsLength;$/;"	m	struct:DoubleValueCompressElement
resiBitsLength	sz/include/CompressElement.h	/^	int resiBitsLength;$/;"	m	struct:FloatValueCompressElement
residualMidBits	sz/include/CompressElement.h	/^	int residualMidBits;$/;"	m	struct:LossyCompressionElement
residualMidBits	sz/include/TightDataPointStorageD.h	/^	unsigned char* residualMidBits;$/;"	m	struct:TightDataPointStorageD
residualMidBits	sz/include/TightDataPointStorageF.h	/^	unsigned char* residualMidBits;$/;"	m	struct:TightDataPointStorageF
residualMidBits_size	sz/include/TightDataPointStorageD.h	/^	int residualMidBits_size;$/;"	m	struct:TightDataPointStorageD
residualMidBits_size	sz/include/TightDataPointStorageF.h	/^	int residualMidBits_size;$/;"	m	struct:TightDataPointStorageF
right	sz/include/Huffman.h	/^	struct node_t *left, *right;$/;"	m	struct:node_t	typeref:struct:node_t::
roundUpToPowerOf2	sz/src/conf.c	/^unsigned int roundUpToPowerOf2(unsigned int base)$/;"	f
rtypeArray	sz/include/TightDataPointStorageD.h	/^	unsigned char* rtypeArray;$/;"	m	struct:TightDataPointStorageD
rtypeArray	sz/include/TightDataPointStorageF.h	/^	unsigned char* rtypeArray;$/;"	m	struct:TightDataPointStorageF
rtypeArray_size	sz/include/TightDataPointStorageD.h	/^	int rtypeArray_size;$/;"	m	struct:TightDataPointStorageD
rtypeArray_size	sz/include/TightDataPointStorageF.h	/^	int rtypeArray_size;$/;"	m	struct:TightDataPointStorageF
sampleDistance	sz/include/sz.h	/^    int sampleDistance;$/;"	m	struct:sz_params
sampleDistance	sz/src/sz.c	/^int sampleDistance = 10;$/;"	v
sane	zlib/inflate.h	/^    int sane;                   \/* if false, allow invalid distance too far *\/$/;"	m	struct:inflate_state
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	example/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	sz/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	zlib/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scan_tree	zlib/trees.c	/^local void scan_tree (s, tree, max_code)$/;"	f
seek	zlib/gzguts.h	/^    int seek;               \/* true if seek request pending *\/$/;"	m	struct:__anon4
segment_size	sz/include/TightDataPointStorageD.h	/^	unsigned int segment_size;$/;"	m	struct:TightDataPointStorageD
segment_size	sz/include/TightDataPointStorageF.h	/^	unsigned int segment_size;$/;"	m	struct:TightDataPointStorageF
segment_size	sz/include/sz.h	/^    int segment_size;$/;"	m	struct:sz_params
segment_size	sz/src/sz.c	/^int segment_size;$/;"	v
send_all_trees	zlib/trees.c	/^local void send_all_trees(s, lcodes, dcodes, blcodes)$/;"	f
send_bits	zlib/trees.c	/^local void send_bits(s, value, length)$/;"	f
send_bits	zlib/trees.c	213;"	d	file:
send_code	zlib/trees.c	163;"	d	file:
send_code	zlib/trees.c	167;"	d	file:
send_tree	zlib/trees.c	/^local void send_tree (s, tree, max_code)$/;"	f
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	example/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	sz/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	zlib/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
size	sz/include/DynamicByteArray.h	/^	int size;$/;"	m	struct:DynamicByteArray
size	sz/include/DynamicDoubleArray.h	/^	int size;$/;"	m	struct:DynamicDoubleArray
size	sz/include/DynamicFloatArray.h	/^	int size;$/;"	m	struct:DynamicFloatArray
size	sz/include/DynamicIntArray.h	/^	int size;$/;"	m	struct:DynamicIntArray
size	sz/include/dictionary.h	/^    int             size ;  \/** Storage size *\/$/;"	m	struct:_dictionary_
size	zlib/gzguts.h	/^    unsigned size;          \/* buffer size, zero if not allocated yet *\/$/;"	m	struct:__anon4
skip	zlib/gzguts.h	/^    z_off64_t skip;         \/* amount to skip (already rewound if backwards) *\/$/;"	m	struct:__anon4
smaller	zlib/trees.c	443;"	d	file:
snprintf	zlib/gzguts.h	103;"	d
sol_ID	sz/include/sz.h	/^    int sol_ID;$/;"	m	struct:sz_params
sol_ID	sz/src/sz.c	/^int sol_ID;$/;"	v
spaceFillingCurveTransform	sz/src/sz.c	/^int spaceFillingCurveTransform; \/\/default is 0, or 1 set by sz.config$/;"	v
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	example/Makefile	/^srcdir = .$/;"	m
srcdir	sz/Makefile	/^srcdir = .$/;"	m
srcdir	zlib/Makefile	/^srcdir = .$/;"	m
start	zlib/gzguts.h	/^    z_off64_t start;        \/* where the gzip data started, for rewinding *\/$/;"	m	struct:__anon4
startTime	example/testdouble_batch_compress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
startTime	example/testdouble_compress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
startTime	example/testdouble_decompress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
startTime	example/testfloat_batch_compress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
startTime	example/testfloat_compress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
startTime	example/testfloat_decompress.c	/^struct timeval startTime;$/;"	v	typeref:struct:timeval
stat_desc	zlib/deflate.h	/^    static_tree_desc *stat_desc; \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s
state	zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
stateNum	sz/src/Huffman.c	/^int stateNum;$/;"	v
static_bl_desc	zlib/trees.c	/^local static_tree_desc  static_bl_desc =$/;"	v
static_d_desc	zlib/trees.c	/^local static_tree_desc  static_d_desc =$/;"	v
static_dtree	zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v
static_dtree	zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v
static_l_desc	zlib/trees.c	/^local static_tree_desc  static_l_desc =$/;"	v
static_len	zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state
static_ltree	zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v
static_ltree	zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v
static_tree	zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	file:
static_tree_desc	zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	zlib/deflate.c	/^struct static_tree_desc_s {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
static_tree_desc_s	zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
status	sz/src/sz.c	/^long status;$/;"	v
status	zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state
strategy	zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state
strategy	zlib/gzguts.h	/^    int strategy;           \/* compression strategy *\/$/;"	m	struct:__anon4
strlwc	sz/src/iniparser.c	/^static char * strlwc(const char * s)$/;"	f	file:
strm	zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state
strm	zlib/gzguts.h	/^    z_stream strm;          \/* stream structure in-place (not a pointer) *\/$/;"	m	struct:__anon4
strstart	zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state
strstrip	sz/src/iniparser.c	/^static char * strstrip(const char * s)$/;"	f	file:
subdir	Makefile	/^subdir = .$/;"	m
subdir	example/Makefile	/^subdir = example$/;"	m
subdir	sz/Makefile	/^subdir = sz$/;"	m
subdir	zlib/Makefile	/^subdir = zlib$/;"	m
svalue	sz/include/sz.h	/^	unsigned short svalue;$/;"	m	union:lshort
symTransform_2bytes	sz/src/dataCompression.c	/^inline void symTransform_2bytes(unsigned char data[2])$/;"	f
symTransform_4bytes	sz/src/dataCompression.c	/^void symTransform_4bytes(unsigned char data[4])$/;"	f
symTransform_8bytes	sz/src/dataCompression.c	/^void symTransform_8bytes(unsigned char data[8])$/;"	f
syncsearch	zlib/inflate.c	/^local unsigned syncsearch(have, buf, len)$/;"	f
sysEndianType	sz/include/sz.h	/^    int sysEndianType; \/\/sysEndianType is actually set automatically.$/;"	m	struct:sz_params
sysEndianType	sz/src/sz.c	/^int sysEndianType; \/\/endian type of the system$/;"	v
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	example/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	sz/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	zlib/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
szMode	sz/include/sz.h	/^    int szMode;$/;"	m	struct:sz_params
szMode	sz/src/sz.c	/^int szMode = SZ_BEST_COMPRESSION;$/;"	v
sz_batch_compress_c_	sz/src/szf.c	/^void sz_batch_compress_c_(unsigned char* bytes, int *outSize)$/;"	f
sz_batch_decompress_c_	sz/src/szf.c	/^void sz_batch_decompress_c_(unsigned char* bytes, int *byteLength, int *ierr)$/;"	f
sz_batchaddvar_d1_double_	sz/src/szf.c	/^void sz_batchaddvar_d1_double_(char* varName, int *len, double* data, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1)$/;"	f
sz_batchaddvar_d1_float_	sz/src/szf.c	/^void sz_batchaddvar_d1_float_(char* varName, int *len, float* data, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1)$/;"	f
sz_batchaddvar_d2_double_	sz/src/szf.c	/^void sz_batchaddvar_d2_double_(char* varName, int *len, double* data, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2)$/;"	f
sz_batchaddvar_d2_float_	sz/src/szf.c	/^void sz_batchaddvar_d2_float_(char* varName, int *len, float* data, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2)$/;"	f
sz_batchaddvar_d3_double_	sz/src/szf.c	/^void sz_batchaddvar_d3_double_(char* varName, int *len, double* data, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_batchaddvar_d3_float_	sz/src/szf.c	/^void sz_batchaddvar_d3_float_(char* varName, int *len, float* data, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_batchaddvar_d4_double_	sz/src/szf.c	/^void sz_batchaddvar_d4_double_(char* varName, int *len, double* data, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_batchaddvar_d4_float_	sz/src/szf.c	/^void sz_batchaddvar_d4_float_(char* varName, int *len, float* data, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_batchaddvar_d5_double_	sz/src/szf.c	/^void sz_batchaddvar_d5_double_(char* varName, int *len, double* data, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_batchaddvar_d5_float_	sz/src/szf.c	/^void sz_batchaddvar_d5_float_(char* varName, int *len, float* data, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_batchdelvar_c_	sz/src/szf.c	/^void sz_batchdelvar_c_(char* varName, int *len, int *errState)$/;"	f
sz_cfgFile	sz/src/sz.c	/^char *sz_cfgFile;$/;"	v
sz_compress_d1_double_	sz/src/szf.c	/^void sz_compress_d1_double_(double* data, unsigned char *bytes, int *outSize, int *r1)$/;"	f
sz_compress_d1_double_args_	sz/src/szf.c	/^void sz_compress_d1_double_args_(double* data, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1)$/;"	f
sz_compress_d1_double_rev_	sz/src/szf.c	/^void sz_compress_d1_double_rev_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *r1)$/;"	f
sz_compress_d1_double_rev_args_	sz/src/szf.c	/^void sz_compress_d1_double_rev_args_(double* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1)$/;"	f
sz_compress_d1_float_	sz/src/szf.c	/^void sz_compress_d1_float_(float* data, unsigned char *bytes, int *outSize, int *r1)	$/;"	f
sz_compress_d1_float_args_	sz/src/szf.c	/^void sz_compress_d1_float_args_(float* data, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1)$/;"	f
sz_compress_d1_float_rev_	sz/src/szf.c	/^void sz_compress_d1_float_rev_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *r1)	$/;"	f
sz_compress_d1_float_rev_args_	sz/src/szf.c	/^void sz_compress_d1_float_rev_args_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1)$/;"	f
sz_compress_d2_double_	sz/src/szf.c	/^void sz_compress_d2_double_(double* data, unsigned char *bytes, int *outSize, int *r1, int *r2)$/;"	f
sz_compress_d2_double_args_	sz/src/szf.c	/^void sz_compress_d2_double_args_(double* data, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2)$/;"	f
sz_compress_d2_double_rev_	sz/src/szf.c	/^void sz_compress_d2_double_rev_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2)$/;"	f
sz_compress_d2_double_rev_args_	sz/src/szf.c	/^void sz_compress_d2_double_rev_args_(double* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2)$/;"	f
sz_compress_d2_float_	sz/src/szf.c	/^void sz_compress_d2_float_(float* data, unsigned char *bytes, int *outSize, int *r1, int *r2)$/;"	f
sz_compress_d2_float_args_	sz/src/szf.c	/^void sz_compress_d2_float_args_(float* data, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2)$/;"	f
sz_compress_d2_float_rev_	sz/src/szf.c	/^void sz_compress_d2_float_rev_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2)$/;"	f
sz_compress_d2_float_rev_args_	sz/src/szf.c	/^void sz_compress_d2_float_rev_args_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2)$/;"	f
sz_compress_d3_double_	sz/src/szf.c	/^void sz_compress_d3_double_(double* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_double_args_	sz/src/szf.c	/^void sz_compress_d3_double_args_(double* data, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_double_rev_	sz/src/szf.c	/^void sz_compress_d3_double_rev_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_double_rev_args_	sz/src/szf.c	/^void sz_compress_d3_double_rev_args_(double* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_float_	sz/src/szf.c	/^void sz_compress_d3_float_(float* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_float_args_	sz/src/szf.c	/^void sz_compress_d3_float_args_(float* data, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_float_rev_	sz/src/szf.c	/^void sz_compress_d3_float_rev_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d3_float_rev_args_	sz/src/szf.c	/^void sz_compress_d3_float_rev_args_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3)$/;"	f
sz_compress_d4_double_	sz/src/szf.c	/^void sz_compress_d4_double_(double* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_double_args_	sz/src/szf.c	/^void sz_compress_d4_double_args_(double* data, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_double_rev_	sz/src/szf.c	/^void sz_compress_d4_double_rev_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_double_rev_args_	sz/src/szf.c	/^void sz_compress_d4_double_rev_args_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_float_	sz/src/szf.c	/^void sz_compress_d4_float_(float* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_float_args_	sz/src/szf.c	/^void sz_compress_d4_float_args_(float* data, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_float_rev_	sz/src/szf.c	/^void sz_compress_d4_float_rev_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d4_float_rev_args_	sz/src/szf.c	/^void sz_compress_d4_float_rev_args_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_compress_d5_double_	sz/src/szf.c	/^void sz_compress_d5_double_(double* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_double_args_	sz/src/szf.c	/^void sz_compress_d5_double_args_(double* data, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_double_rev_	sz/src/szf.c	/^void sz_compress_d5_double_rev_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_double_rev_args_	sz/src/szf.c	/^void sz_compress_d5_double_rev_args_(double* data, double *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, double *absErrBound, double *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_float_	sz/src/szf.c	/^void sz_compress_d5_float_(float* data, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_float_args_	sz/src/szf.c	/^void sz_compress_d5_float_args_(float* data, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_float_rev_	sz/src/szf.c	/^void sz_compress_d5_float_rev_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_compress_d5_float_rev_args_	sz/src/szf.c	/^void sz_compress_d5_float_rev_args_(float* data, float *reservedValue, unsigned char *bytes, int *outSize, int *errBoundMode, float *absErrBound, float *relBoundRatio, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_decompress_d1_double_	sz/src/szf.c	/^void sz_decompress_d1_double_(unsigned char *bytes, int *byteLength, double *data, int *r1)$/;"	f
sz_decompress_d1_float_	sz/src/szf.c	/^void sz_decompress_d1_float_(unsigned char *bytes, int *byteLength, float *data, int *r1)$/;"	f
sz_decompress_d2_double_	sz/src/szf.c	/^void sz_decompress_d2_double_(unsigned char *bytes, int *byteLength, double *data, int *r1, int *r2)$/;"	f
sz_decompress_d2_float_	sz/src/szf.c	/^void sz_decompress_d2_float_(unsigned char *bytes, int *byteLength, float *data, int *r1, int *r2)$/;"	f
sz_decompress_d3_double_	sz/src/szf.c	/^void sz_decompress_d3_double_(unsigned char *bytes, int *byteLength, double *data, int *r1, int *r2, int *r3)$/;"	f
sz_decompress_d3_float_	sz/src/szf.c	/^void sz_decompress_d3_float_(unsigned char *bytes, int *byteLength, float *data, int *r1, int *r2, int *r3)$/;"	f
sz_decompress_d4_double_	sz/src/szf.c	/^void sz_decompress_d4_double_(unsigned char *bytes, int *byteLength, double *data, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_decompress_d4_float_	sz/src/szf.c	/^void sz_decompress_d4_float_(unsigned char *bytes, int *byteLength, float *data, int *r1, int *r2, int *r3, int *r4)$/;"	f
sz_decompress_d5_double_	sz/src/szf.c	/^void sz_decompress_d5_double_(unsigned char *bytes, int *byteLength, double *data, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_decompress_d5_float_	sz/src/szf.c	/^void sz_decompress_d5_float_(unsigned char *bytes, int *byteLength, float *data, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_finalize_c_	sz/src/szf.c	/^void sz_finalize_c_()$/;"	f
sz_freevarset_c_	sz/src/szf.c	/^void sz_freevarset_c_(int *mode)$/;"	f
sz_getvardata_double_	sz/src/szf.c	/^void sz_getvardata_double_(char* varName, int *len, double* data)$/;"	f
sz_getvardata_float_	sz/src/szf.c	/^void sz_getvardata_float_(char* varName, int *len, float* data)$/;"	f
sz_getvardim_c_	sz/src/szf.c	/^void sz_getvardim_c_(char* varName, int *len, int *dim, int *r1, int *r2, int *r3, int *r4, int *r5)$/;"	f
sz_init_c_	sz/src/szf.c	/^void sz_init_c_(char *configFile,int *len,int *ierr)$/;"	f
sz_mode	example/testdouble_batch_f.f90	/^        INTEGER(kind=4) :: sz_mode /;"	v	program:p
sz_params	sz/include/sz.h	/^typedef struct sz_params$/;"	s
sz_params	sz/include/sz.h	/^} sz_params;$/;"	t	typeref:struct:sz_params
sz_varset	sz/src/sz.c	/^SZ_VarSet* sz_varset = NULL;$/;"	v
t	sz/include/Huffman.h	/^	char t; \/\/in_node:0; otherwise:1$/;"	m	struct:node_t
table	zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	example/Makefile	/^target_alias = $/;"	m
target_alias	sz/Makefile	/^target_alias = $/;"	m
target_alias	zlib/Makefile	/^target_alias = $/;"	m
testdouble_batch_compress_DEPENDENCIES	example/Makefile	/^testdouble_batch_compress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testdouble_batch_compress_LDADD	example/Makefile	/^testdouble_batch_compress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testdouble_batch_compress_OBJECTS	example/Makefile	/^testdouble_batch_compress_OBJECTS =  \\$/;"	m
testdouble_batch_compress_SOURCES	example/Makefile	/^testdouble_batch_compress_SOURCES = testdouble_batch_compress.c$/;"	m
testdouble_batch_f_OBJECTS	example/Makefile	/^testdouble_batch_f_OBJECTS = $(am_testdouble_batch_f_OBJECTS)$/;"	m
testdouble_compress_DEPENDENCIES	example/Makefile	/^testdouble_compress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testdouble_compress_LDADD	example/Makefile	/^testdouble_compress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testdouble_compress_OBJECTS	example/Makefile	/^testdouble_compress_OBJECTS = $(am_testdouble_compress_OBJECTS)$/;"	m
testdouble_compress_SOURCES	example/Makefile	/^testdouble_compress_SOURCES = testdouble_compress.c$/;"	m
testdouble_compress_f_OBJECTS	example/Makefile	/^testdouble_compress_f_OBJECTS = $(am_testdouble_compress_f_OBJECTS)$/;"	m
testdouble_decompress_DEPENDENCIES	example/Makefile	/^testdouble_decompress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testdouble_decompress_LDADD	example/Makefile	/^testdouble_decompress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testdouble_decompress_OBJECTS	example/Makefile	/^testdouble_decompress_OBJECTS = $(am_testdouble_decompress_OBJECTS)$/;"	m
testdouble_decompress_SOURCES	example/Makefile	/^testdouble_decompress_SOURCES = testdouble_decompress.c$/;"	m
testdouble_decompress_f_OBJECTS	example/Makefile	/^testdouble_decompress_f_OBJECTS =  \\$/;"	m
testfloat_batch_compress_DEPENDENCIES	example/Makefile	/^testfloat_batch_compress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testfloat_batch_compress_LDADD	example/Makefile	/^testfloat_batch_compress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testfloat_batch_compress_OBJECTS	example/Makefile	/^testfloat_batch_compress_OBJECTS =  \\$/;"	m
testfloat_batch_compress_SOURCES	example/Makefile	/^testfloat_batch_compress_SOURCES = testfloat_batch_compress.c$/;"	m
testfloat_compress_DEPENDENCIES	example/Makefile	/^testfloat_compress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testfloat_compress_LDADD	example/Makefile	/^testfloat_compress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testfloat_compress_OBJECTS	example/Makefile	/^testfloat_compress_OBJECTS = $(am_testfloat_compress_OBJECTS)$/;"	m
testfloat_compress_SOURCES	example/Makefile	/^testfloat_compress_SOURCES = testfloat_compress.c$/;"	m
testfloat_decompress_DEPENDENCIES	example/Makefile	/^testfloat_decompress_DEPENDENCIES = ..\/sz\/.libs\/libsz.a \\$/;"	m
testfloat_decompress_LDADD	example/Makefile	/^testfloat_decompress_LDADD = ..\/sz\/.libs\/libsz.a ..\/zlib\/.libs\/libzlib.a$/;"	m
testfloat_decompress_OBJECTS	example/Makefile	/^testfloat_decompress_OBJECTS = $(am_testfloat_decompress_OBJECTS)$/;"	m
testfloat_decompress_SOURCES	example/Makefile	/^testfloat_decompress_SOURCES = testfloat_decompress.c$/;"	m
text	zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
time	zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	example/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	sz/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	zlib/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	example/Makefile	/^top_builddir = ..$/;"	m
top_builddir	sz/Makefile	/^top_builddir = ..$/;"	m
top_builddir	zlib/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	example/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	sz/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	zlib/Makefile	/^top_srcdir = ..$/;"	m
total	zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state
totalCost	example/testdouble_batch_compress.c	/^double totalCost = 0;$/;"	v
totalCost	example/testdouble_compress.c	/^double totalCost = 0;$/;"	v
totalCost	example/testdouble_decompress.c	/^double totalCost = 0;$/;"	v
totalCost	example/testfloat_batch_compress.c	/^double totalCost = 0;$/;"	v
totalCost	example/testfloat_compress.c	/^double totalCost = 0;$/;"	v
totalCost	example/testfloat_decompress.c	/^double totalCost = 0;$/;"	v
total_in	zlib/zlib.h	/^    uLong    total_in;  \/* total number of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	zlib/zlib.h	/^    uLong    total_out; \/* total number of bytes output so far *\/$/;"	m	struct:z_stream_s
tr_static_init	zlib/trees.c	/^local void tr_static_init()$/;"	f
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	example/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	sz/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	zlib/Makefile	/^transform = $(program_transform_name)$/;"	m
tree_desc	zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s
tree_desc_s	zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
typeArray	sz/include/TightDataPointStorageD.h	/^	unsigned char* typeArray; \/\/its size is dataSeriesLength\/4 (or xxx\/4+1) $/;"	m	struct:TightDataPointStorageD
typeArray	sz/include/TightDataPointStorageF.h	/^	unsigned char* typeArray; \/\/its size is dataSeriesLength\/4 (or xxx\/4+1) $/;"	m	struct:TightDataPointStorageF
typeArray_size	sz/include/TightDataPointStorageD.h	/^	int typeArray_size;$/;"	m	struct:TightDataPointStorageD
typeArray_size	sz/include/TightDataPointStorageF.h	/^	int typeArray_size;$/;"	m	struct:TightDataPointStorageF
uInt	zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	zlib/zconf.h	141;"	d
uIntf	zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	zlib/zconf.h	142;"	d
uLong	zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	zlib/zconf.h	143;"	d
uLongf	zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	zlib/zconf.h	144;"	d
uch	zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t
uchf	zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t
ulg	zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t
uncompress	zlib/uncompr.c	/^int ZEXPORT uncompress (dest, destLen, source, sourceLen)$/;"	f
uncompress	zlib/zconf.h	117;"	d
unpad_tree_uchar	sz/src/Huffman.c	/^void unpad_tree_uchar(unsigned char* L, unsigned char* R, unsigned int* C, unsigned char *t, unsigned int i, node root)$/;"	f
unpad_tree_uint	sz/src/Huffman.c	/^void unpad_tree_uint(unsigned int* L, unsigned int* R, unsigned int* C, unsigned char* t, unsigned int i, node root)$/;"	f
unpad_tree_ushort	sz/src/Huffman.c	/^void unpad_tree_ushort(unsigned short* L, unsigned short* R, unsigned int* C, unsigned char* t, unsigned int i, node root)$/;"	f
updateLossyCompElement_Double	sz/src/CompressElement.c	/^void updateLossyCompElement_Double(unsigned char* curBytes, unsigned char* preBytes, $/;"	f
updateLossyCompElement_Float	sz/src/CompressElement.c	/^void updateLossyCompElement_Float(unsigned char* curBytes, unsigned char* preBytes, $/;"	f
updateQuantizationInfo	sz/src/conf.c	/^void updateQuantizationInfo(int quant_intervals)$/;"	f
updatewindow	zlib/inflate.c	/^local int updatewindow(strm, end, copy)$/;"	f
ush	zlib/zutil.h	/^typedef unsigned short ush;$/;"	t
ushf	zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t
val	sz/include/dictionary.h	/^    char        **  val ;   \/** List of string values *\/$/;"	m	struct:_dictionary_
val	zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon1
validPrediction_double	sz/src/CompressElement.c	/^int validPrediction_double(double minErr, double precision)$/;"	f
validPrediction_float	sz/src/CompressElement.c	/^int validPrediction_float(float minErr, float precision)$/;"	f
value	sz/include/sz.h	/^    double value;$/;"	m	union:ldouble
value	sz/include/sz.h	/^    float value;$/;"	m	union:lfloat
varName	sz/include/VarSet.h	/^	char* varName;$/;"	m	struct:SZ_Variable
verbose	zlib/zutil.c	121;"	d	file:
versionNumber	sz/src/sz.c	/^int versionNumber[4] = {SZ_VER_MAJOR,SZ_VER_MINOR,SZ_VER_BUILD,SZ_VER_REVISION};$/;"	v
voidp	zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	zlib/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	zlib/zconf.h	145;"	d
voidpc	zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpc	zlib/zconf.h	146;"	d
voidpf	zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	zlib/zconf.h	147;"	d
vsnprintf	zlib/gzguts.h	80;"	d
w_bits	zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state
w_mask	zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state
w_size	zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state
want	zlib/gzguts.h	/^    unsigned want;          \/* requested buffer size, default is GZBUFSIZE *\/$/;"	m	struct:__anon4
was	zlib/inflate.h	/^    unsigned was;               \/* initial length of match *\/$/;"	m	struct:inflate_state
wbits	zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state
whave	zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state
window	zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state
window	zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state
window_size	zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state
wnext	zlib/inflate.h	/^    unsigned wnext;             \/* window write index *\/$/;"	m	struct:inflate_state
work	zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state
wrap	zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state
wrap	zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:inflate_state
write	zlib/gzguts.h	41;"	d
writeByteData	sz/src/rw.c	/^void writeByteData(unsigned char *bytes, int byteLength, char *tgtFilePath, int *status)$/;"	f
writeData	sz/src/rw.c	/^void writeData(void *data, int dataType, int nbEle, char *tgtFilePath, int *status)$/;"	f
writeDoubleData	sz/src/rw.c	/^void writeDoubleData(double *data, int nbEle, char *tgtFilePath, int *status)$/;"	f
writeDoubleData_inBytes	sz/src/rw.c	/^void writeDoubleData_inBytes(double *data, int nbEle, char* tgtFilePath, int *status)$/;"	f
writeFloatData	sz/src/rw.c	/^void writeFloatData(float *data, int nbEle, char *tgtFilePath, int *status)$/;"	f
writeFloatData_inBytes	sz/src/rw.c	/^void writeFloatData_inBytes(float *data, int nbEle, char* tgtFilePath, int *status)$/;"	f
writeShortData	sz/src/rw.c	/^void writeShortData(unsigned short *states, int stateLength, char *tgtFilePath, int *status)$/;"	f
write_table	zlib/crc32.c	/^local void write_table(out, table)$/;"	f
writebytefile_	sz/src/rwf.c	/^void writebytefile_(unsigned char *bytes, int *byteLength, char *tgtFilePath, int *len)$/;"	f
writedoublefile_	sz/src/rwf.c	/^void writedoublefile_(double *data, int *nbEle, char *tgtFilePath, int *len)$/;"	f
writefloatfile_	sz/src/rwf.c	/^void writefloatfile_(float *data, int *nbEle, char *tgtFilePath, int *len)$/;"	f
wsize	zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state
x	zlib/gzguts.h	/^    struct gzFile_s x;      \/* "x" for exposed *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::gzFile_s
xflags	zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
xstrdup	sz/src/dictionary.c	/^static char * xstrdup(const char * s)$/;"	f	file:
zError	zlib/zconf.h	119;"	d
zError	zlib/zutil.c	/^const char * ZEXPORT zError(err)$/;"	f
z_adler32_combine	zlib/zlib.h	1706;"	d
z_const	zlib/zconf.h	222;"	d
z_const	zlib/zconf.h	224;"	d
z_crc32_combine	zlib/zlib.h	1707;"	d
z_crc_t	zlib/zconf.h	/^   typedef Z_U4 z_crc_t;$/;"	t
z_crc_t	zlib/zconf.h	/^   typedef unsigned long z_crc_t;$/;"	t
z_errmsg	zlib/zutil.c	/^z_const char * const z_errmsg[10] = {$/;"	v
z_error	zlib/zutil.c	/^void ZLIB_INTERNAL z_error (m)$/;"	f
z_gzgetc	zlib/gzread.c	383;"	d	file:
z_gzgetc	zlib/zlib.h	1677;"	d
z_gzgetc	zlib/zlib.h	1678;"	d
z_gzoffset	zlib/zlib.h	1705;"	d
z_gzopen	zlib/zlib.h	1702;"	d
z_gzseek	zlib/zlib.h	1703;"	d
z_gztell	zlib/zlib.h	1704;"	d
z_off64_t	zlib/zconf.h	485;"	d
z_off64_t	zlib/zconf.h	488;"	d
z_off64_t	zlib/zconf.h	490;"	d
z_off_t	zlib/zconf.h	457;"	d
z_off_t	zlib/zconf.h	481;"	d
z_stream	zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
z_verbose	zlib/zutil.c	/^int ZLIB_INTERNAL z_verbose = verbose;$/;"	v
zalloc	zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zcalloc	zlib/zconf.h	121;"	d
zcalloc	zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (opaque, items, size)$/;"	f
zcalloc	zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, uInt items, uInt size)$/;"	f
zcalloc	zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f
zcfree	zlib/zconf.h	122;"	d
zcfree	zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (opaque, ptr)$/;"	f
zcfree	zlib/zutil.c	/^void ZLIB_INTERNAL zcfree (voidpf opaque, voidpf ptr)$/;"	f
zfree	zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlibCompileFlags	zlib/zconf.h	124;"	d
zlibCompileFlags	zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags()$/;"	f
zlibVersion	zlib/zconf.h	125;"	d
zlibVersion	zlib/zutil.c	/^const char * ZEXPORT zlibVersion()$/;"	f
zlib_compress	sz/src/test_zlib.c	/^unsigned long zlib_compress(unsigned char* data, unsigned long dataLength, unsigned char** compressBytes, int level)$/;"	f
zlib_compress2	sz/src/test_zlib.c	/^unsigned long zlib_compress2(unsigned char* data, unsigned long dataLength, unsigned char** compressBytes, int level)$/;"	f
zlib_uncompress	sz/src/test_zlib.c	/^unsigned long zlib_uncompress(unsigned char* compressBytes, unsigned long cmpSize, unsigned char** oriData, unsigned long targetOriSize)$/;"	f
zlib_uncompress2	sz/src/test_zlib.c	/^unsigned long zlib_uncompress2 (unsigned char* compressBytes, unsigned long cmpSize, unsigned char** oriData, unsigned long targetOriSize)$/;"	f
zlib_version	zlib/zlib.h	210;"	d
zmemcmp	zlib/zutil.c	/^int ZLIB_INTERNAL zmemcmp(s1, s2, len)$/;"	f
zmemcmp	zlib/zutil.h	205;"	d
zmemcmp	zlib/zutil.h	209;"	d
zmemcpy	zlib/zutil.c	/^void ZLIB_INTERNAL zmemcpy(dest, source, len)$/;"	f
zmemcpy	zlib/zutil.h	204;"	d
zmemcpy	zlib/zutil.h	208;"	d
zmemzero	zlib/zutil.c	/^void ZLIB_INTERNAL zmemzero(dest, len)$/;"	f
zmemzero	zlib/zutil.h	206;"	d
zmemzero	zlib/zutil.h	210;"	d
zstrerror	zlib/gzguts.h	120;"	d
zstrerror	zlib/gzguts.h	124;"	d
zstrerror	zlib/gzguts.h	126;"	d
